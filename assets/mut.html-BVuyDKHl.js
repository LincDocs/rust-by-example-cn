import{_ as e,e as i,k as l,f as s,g as p,h as t,r as o,o as c}from"./app-CVSWwIkE.js";const d={};function r(m,n){const a=o("RouteLink");return c(),i("div",null,[n[1]||(n[1]=l(`<h1 id="可变性" tabindex="-1"><a class="header-anchor" href="#可变性"><span>可变性</span></a></h1><p>可变数据可以使用 <code>&amp;mut T</code> 进行可变借用。这叫做<strong>可变引用</strong>（mutable reference），它使借用者可以读/写数据。相反，<code>&amp;T</code> 通过不可变引用（immutable reference）来借用数据，借用者可以读数据而不能更改数据：</p><div class="language-rust,editable,ignore,mdbook-runnable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable,ignore,mdbook-runnable" data-title="rust,editable,ignore,mdbook-runnable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#[allow(dead_code)]</span></span>
<span class="line"><span>#[derive(Clone, Copy)]</span></span>
<span class="line"><span>struct Book {</span></span>
<span class="line"><span>    // \`&amp;&#39;static str\` 是一个对分配在只读内存区的字符串的引用</span></span>
<span class="line"><span>    author: &amp;&#39;static str,</span></span>
<span class="line"><span>    title: &amp;&#39;static str,</span></span>
<span class="line"><span>    year: u32,</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 此函数接受一个对 Book 类型的引用</span></span>
<span class="line"><span>fn borrow_book(book: &amp;Book) {</span></span>
<span class="line"><span>    println!(&quot;I immutably borrowed {} - {} edition&quot;, book.title, book.year);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 此函数接受一个对可变的 Book 类型的引用，它把年份 \`year\` 改为 2014 年</span></span>
<span class="line"><span>fn new_edition(book: &amp;mut Book) {</span></span>
<span class="line"><span>    book.year = 2014;</span></span>
<span class="line"><span>    println!(&quot;I mutably borrowed {} - {} edition&quot;, book.title, book.year);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    // 创建一个名为 \`immutabook\` 的不可变的 Book 实例</span></span>
<span class="line"><span>    let immutabook = Book {</span></span>
<span class="line"><span>        // 字符串字面量拥有 \`&amp;&#39;static str\` 类型</span></span>
<span class="line"><span>        author: &quot;Douglas Hofstadter&quot;,</span></span>
<span class="line"><span>        title: &quot;Gödel, Escher, Bach&quot;,</span></span>
<span class="line"><span>        year: 1979,</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 创建一个 \`immutabook\` 的可变拷贝，命名为 \`mutabook\`</span></span>
<span class="line"><span>    let mut mutabook = immutabook;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 不可变地借用一个不可变对象</span></span>
<span class="line"><span>    borrow_book(&amp;immutabook);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 不可变地借用一个可变对象</span></span>
<span class="line"><span>    borrow_book(&amp;mutabook);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 可变地借用一个可变对象</span></span>
<span class="line"><span>    new_edition(&amp;mut mutabook);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 报错！不能可变地借用一个不可变对象</span></span>
<span class="line"><span>    new_edition(&amp;mut immutabook);</span></span>
<span class="line"><span>    // 改正 ^ 注释掉此行</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>`,4)),s("p",null,[p(a,{to:"/scope/lifetime/static_lifetime.html"},{default:t(()=>n[0]||(n[0]=[s("code",null,"static",-1)])),_:1})])])}const b=e(d,[["render",r],["__file","mut.html.vue"]]),v=JSON.parse('{"path":"/scope/borrow/mut.html","title":"可变性","lang":"zh-CN","frontmatter":{"description":"可变性 可变数据可以使用 &mut T 进行可变借用。这叫做可变引用（mutable reference），它使借用者可以读/写数据。相反，&T 通过不可变引用（immutable reference）来借用数据，借用者可以读数据而不能更改数据： 参见：","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/scope/borrow/mut.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"可变性"}],["meta",{"property":"og:description","content":"可变性 可变数据可以使用 &mut T 进行可变借用。这叫做可变引用（mutable reference），它使借用者可以读/写数据。相反，&T 通过不可变引用（immutable reference）来借用数据，借用者可以读数据而不能更改数据： 参见："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"可变性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"scope/borrow/mut.md","excerpt":"\\n<p>可变数据可以使用 <code>&amp;mut T</code> 进行可变借用。这叫做<strong>可变引用</strong>（mutable reference），它使借用者可以读/写数据。相反，<code>&amp;T</code> 通过不可变引用（immutable reference）来借用数据，借用者可以读数据而不能更改数据：</p>\\n<div class=\\"language-rust,editable,ignore,mdbook-runnable line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,editable,ignore,mdbook-runnable\\" data-title=\\"rust,editable,ignore,mdbook-runnable\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>#[allow(dead_code)]</span></span>\\n<span class=\\"line\\"><span>#[derive(Clone, Copy)]</span></span>\\n<span class=\\"line\\"><span>struct Book {</span></span>\\n<span class=\\"line\\"><span>    // `&amp;\'static str` 是一个对分配在只读内存区的字符串的引用</span></span>\\n<span class=\\"line\\"><span>    author: &amp;\'static str,</span></span>\\n<span class=\\"line\\"><span>    title: &amp;\'static str,</span></span>\\n<span class=\\"line\\"><span>    year: u32,</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>// 此函数接受一个对 Book 类型的引用</span></span>\\n<span class=\\"line\\"><span>fn borrow_book(book: &amp;Book) {</span></span>\\n<span class=\\"line\\"><span>    println!(\\"I immutably borrowed {} - {} edition\\", book.title, book.year);</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>// 此函数接受一个对可变的 Book 类型的引用，它把年份 `year` 改为 2014 年</span></span>\\n<span class=\\"line\\"><span>fn new_edition(book: &amp;mut Book) {</span></span>\\n<span class=\\"line\\"><span>    book.year = 2014;</span></span>\\n<span class=\\"line\\"><span>    println!(\\"I mutably borrowed {} - {} edition\\", book.title, book.year);</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>fn main() {</span></span>\\n<span class=\\"line\\"><span>    // 创建一个名为 `immutabook` 的不可变的 Book 实例</span></span>\\n<span class=\\"line\\"><span>    let immutabook = Book {</span></span>\\n<span class=\\"line\\"><span>        // 字符串字面量拥有 `&amp;\'static str` 类型</span></span>\\n<span class=\\"line\\"><span>        author: \\"Douglas Hofstadter\\",</span></span>\\n<span class=\\"line\\"><span>        title: \\"Gödel, Escher, Bach\\",</span></span>\\n<span class=\\"line\\"><span>        year: 1979,</span></span>\\n<span class=\\"line\\"><span>    };</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 创建一个 `immutabook` 的可变拷贝，命名为 `mutabook`</span></span>\\n<span class=\\"line\\"><span>    let mut mutabook = immutabook;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 不可变地借用一个不可变对象</span></span>\\n<span class=\\"line\\"><span>    borrow_book(&amp;immutabook);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 不可变地借用一个可变对象</span></span>\\n<span class=\\"line\\"><span>    borrow_book(&amp;mutabook);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 可变地借用一个可变对象</span></span>\\n<span class=\\"line\\"><span>    new_edition(&amp;mut mutabook);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 报错！不能可变地借用一个不可变对象</span></span>\\n<span class=\\"line\\"><span>    new_edition(&amp;mut immutabook);</span></span>\\n<span class=\\"line\\"><span>    // 改正 ^ 注释掉此行</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[{"title":"static_lifetime","link":"scope/lifetime/static_lifetime.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"scope/borrow/mut.md","value":{"title":"mut","path":"scope/borrow/mut.md","outlink":["scope/lifetime/static_lifetime.md"],"backlink":["SUMMARY.md"]}},{"id":"scope/lifetime/static_lifetime.md","value":{"title":"static_lifetime","path":"scope/lifetime/static_lifetime.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"scope/borrow/mut.md","target":"scope/lifetime/static_lifetime.md"},{"source":"SUMMARY.md","target":"scope/borrow/mut.md"}]}}}');export{b as comp,v as data};
