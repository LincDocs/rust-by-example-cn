import{_ as e,e as l,f as i,k as p,i as n,g as t,h as d,r,o as h}from"./app-CVSWwIkE.js";const c={};function k(o,s){const a=r("RouteLink");return h(),l("div",null,[s[3]||(s[3]=i("h1",{id:"文件分层",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#文件分层"},[i("span",null,"文件分层")])],-1)),i("p",null,[s[1]||(s[1]=n("模块可以分配到文件/目录的层次结构中。让我们将《可见性》一节中的")),t(a,{to:"/mod/visibility.html"},{default:d(()=>s[0]||(s[0]=[n("例子")])),_:1}),s[2]||(s[2]=n("的代码拆分到多个文件中："))]),s[4]||(s[4]=p(`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inaccessible.rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod.rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nested.rs</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> split.rs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>split.rs</code> 的内容：</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 此声明将会查找名为 \`my.rs\` 或 \`my/mod.rs\` 的文件，并将该文件的内容放到</span></span>
<span class="line"><span>// 此作用域中一个名为 \`my\` 的模块里面。</span></span>
<span class="line"><span>mod my;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn function() {</span></span>
<span class="line"><span>    println!(&quot;called \`function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    my::function();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    function();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    my::indirect_access();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    my::nested::function();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>my/mod.rs</code> 的内容：</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 类似地，\`mod inaccessible\` 和 \`mod nested\` 将找到 \`nested.rs\` 和</span></span>
<span class="line"><span>// \`inaccessible.rs\` 文件，并在它们放到各自的模块中。</span></span>
<span class="line"><span>mod inaccessible;</span></span>
<span class="line"><span>pub mod nested;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pub fn function() {</span></span>
<span class="line"><span>    println!(&quot;called \`my::function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn private_function() {</span></span>
<span class="line"><span>    println!(&quot;called \`my::private_function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pub fn indirect_access() {</span></span>
<span class="line"><span>    print!(&quot;called \`my::indirect_access()\`, that\\n&gt; &quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private_function();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>my/nested.rs</code> 的内容：</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pub fn function() {</span></span>
<span class="line"><span>    println!(&quot;called \`my::nested::function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#[allow(dead_code)]</span></span>
<span class="line"><span>fn private_function() {</span></span>
<span class="line"><span>    println!(&quot;called \`my::nested::private_function()\`&quot;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>my/inaccessible.rs</code> 的内容：</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#[allow(dead_code)]</span></span>
<span class="line"><span>pub fn public_function() {</span></span>
<span class="line"><span>    println!(&quot;called \`my::inaccessible::public_function()\`&quot;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看到代码仍然正常运行，就和前面的一样：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> split.rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./split</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">called</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> \`my::function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">my::indirect_access</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> called </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\`my::private_function</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">()\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">my::nested::function</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">()\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11))])}const u=e(c,[["render",k],["__file","split.html.vue"]]),v=JSON.parse('{"path":"/mod/split.html","title":"文件分层","lang":"zh-CN","frontmatter":{"description":"文件分层 模块可以分配到文件/目录的层次结构中。让我们将《可见性》一节中的的代码拆分到多个文件中： split.rs 的内容： my/mod.rs 的内容： my/nested.rs 的内容： my/inaccessible.rs 的内容： 我们看到代码仍然正常运行，就和前面的一样：","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/mod/split.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"文件分层"}],["meta",{"property":"og:description","content":"文件分层 模块可以分配到文件/目录的层次结构中。让我们将《可见性》一节中的的代码拆分到多个文件中： split.rs 的内容： my/mod.rs 的内容： my/nested.rs 的内容： my/inaccessible.rs 的内容： 我们看到代码仍然正常运行，就和前面的一样："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件分层\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"mod/split.md","excerpt":"\\n<p>模块可以分配到文件/目录的层次结构中。让我们将《可见性》一节中的<a href=\\"/rust-by-example-cn-/mod/visibility.html\\" target=\\"_blank\\">例子</a>的代码拆分到多个文件中：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">$</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> tree</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> .</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">.</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">|</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">--</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> my</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">|   |</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">--</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> inaccessible.rs</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">|   |</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">--</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> mod.rs</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">|   </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">--</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> nested.rs</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">--</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> split.rs</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[{"title":"visibility","link":"mod/visibility.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"mod/split.md","value":{"title":"split","path":"mod/split.md","outlink":["mod/visibility.md"],"backlink":["SUMMARY.md"]}},{"id":"mod/visibility.md","value":{"title":"visibility","path":"mod/visibility.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"mod/split.md","target":"mod/visibility.md"},{"source":"SUMMARY.md","target":"mod/split.md"}]}}}');export{u as comp,v as data};
