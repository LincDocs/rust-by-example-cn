import{_ as n,e as i,f as e,i as r,g as a,h as l,r as s,o as p}from"./app-CY03Lsxp.js";const m={};function d(u,t){const o=s("RouteLink");return p(),i("div",null,[t[11]||(t[11]=e("h1",{id:"类型转换",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#类型转换"},[e("span",null,"类型转换")])],-1)),e("p",null,[t[1]||(t[1]=r("Rust 使用 ")),a(o,{to:"/trait.html"},{default:l(()=>t[0]||(t[0]=[r("trait")])),_:1}),t[2]||(t[2]=r(" 解决类型之间的转换问题。最一般的转换会用到 ")),t[3]||(t[3]=e("a",{href:"https://rustwiki.org/zh-CN/std/convert/trait.From.html",target:"_blank",rel:"noopener noreferrer"},[e("code",null,"From")],-1)),t[4]||(t[4]=r(" 和 ")),t[5]||(t[5]=e("a",{href:"https://rustwiki.org/zh-CN/std/convert/trait.Into.html",target:"_blank",rel:"noopener noreferrer"},[e("code",null,"Into")],-1)),t[6]||(t[6]=r(" 两个 trait。不过，即便常见的情况也可能会用到特别的 trait，尤其是从 ")),t[7]||(t[7]=e("code",null,"String",-1)),t[8]||(t[8]=r(" 转换到别的类型，以及把别的类型转换到 ")),t[9]||(t[9]=e("code",null,"String",-1)),t[10]||(t[10]=r(" 时。"))])])}const c=n(m,[["render",d],["__file","conversion.html.vue"]]),k=JSON.parse('{"path":"/conversion.html","title":"类型转换","lang":"zh-CN","frontmatter":{"description":"类型转换 Rust 使用 解决类型之间的转换问题。最一般的转换会用到 From 和 Into 两个 trait。不过，即便常见的情况也可能会用到特别的 trait，尤其是从 String 转换到别的类型，以及把别的类型转换到 String 时。","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn/conversion.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn"}],["meta",{"property":"og:title","content":"类型转换"}],["meta",{"property":"og:description","content":"类型转换 Rust 使用 解决类型之间的转换问题。最一般的转换会用到 From 和 Into 两个 trait。不过，即便常见的情况也可能会用到特别的 trait，尤其是从 String 转换到别的类型，以及把别的类型转换到 String 时。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型转换\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"conversion.md","excerpt":"\\n<p>Rust 使用 <a href=\\"/rust-by-example-cn/trait.html\\" target=\\"_blank\\">trait</a> 解决类型之间的转换问题。最一般的转换会用到 <a href=\\"https://rustwiki.org/zh-CN/std/convert/trait.From.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>From</code></a> 和 <a href=\\"https://rustwiki.org/zh-CN/std/convert/trait.Into.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>Into</code></a> 两个 trait。不过，即便常见的情况也可能会用到特别的 trait，尤其是从 <code>String</code> 转换到别的类型，以及把别的类型转换到 <code>String</code> 时。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"conversion.md","value":{"title":"conversion","path":"conversion.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"conversion.md"}]}}}');export{c as comp,k as data};
