import{_ as a,e as s,f as l,g as i,h as r,r as m,o,i as n}from"./app-CVSWwIkE.js";const u={};function d(p,t){const e=m("RouteLink");return o(),s("div",null,[t[193]||(t[193]=l("h1",{id:"summary",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#summary"},[l("span",null,"Summary")])],-1)),l("p",null,[i(e,{to:"/"},{default:r(()=>t[0]||(t[0]=[n("简介")])),_:1})]),l("ul",null,[l("li",null,[l("p",null,[i(e,{to:"/hello.html"},{default:r(()=>t[1]||(t[1]=[n("Hello World")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/hello/comment.html"},{default:r(()=>t[2]||(t[2]=[n("注释")])),_:1})]),l("li",null,[i(e,{to:"/hello/print.html"},{default:r(()=>t[3]||(t[3]=[n("格式化输出")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/hello/print/print_debug.html"},{default:r(()=>t[4]||(t[4]=[n("调试（debug）")])),_:1})]),l("li",null,[i(e,{to:"/hello/print/print_display.html"},{default:r(()=>t[5]||(t[5]=[n("显示（display）")])),_:1})]),l("li",null,[i(e,{to:"/hello/print/print_display/testcase_list.html"},{default:r(()=>t[6]||(t[6]=[n("测试实例：List")])),_:1})]),l("li",null,[i(e,{to:"/hello/print/fmt.html"},{default:r(()=>t[7]||(t[7]=[n("格式化")])),_:1})])])])])]),l("li",null,[l("p",null,[i(e,{to:"/primitives.html"},{default:r(()=>t[8]||(t[8]=[n("原生类型")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/primitives/literals.html"},{default:r(()=>t[9]||(t[9]=[n("字面量和运算符")])),_:1})]),l("li",null,[i(e,{to:"/primitives/tuples.html"},{default:r(()=>t[10]||(t[10]=[n("元组")])),_:1})]),l("li",null,[i(e,{to:"/primitives/array.html"},{default:r(()=>t[11]||(t[11]=[n("数组和切片")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/custom_types.html"},{default:r(()=>t[12]||(t[12]=[n("自定义类型")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/custom_types/structs.html"},{default:r(()=>t[13]||(t[13]=[n("结构体")])),_:1})]),l("li",null,[i(e,{to:"/custom_types/enum.html"},{default:r(()=>t[14]||(t[14]=[n("枚举")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/custom_types/enum/enum_use.html"},{default:r(()=>t[15]||(t[15]=[n("使用 use")])),_:1})]),l("li",null,[i(e,{to:"/custom_types/enum/c_like.html"},{default:r(()=>t[16]||(t[16]=[n("C 风格用法")])),_:1})]),l("li",null,[i(e,{to:"/custom_types/enum/testcase_linked_list.html"},{default:r(()=>t[17]||(t[17]=[n("测试实例：链表")])),_:1})])])]),l("li",null,[i(e,{to:"/custom_types/constants.html"},{default:r(()=>t[18]||(t[18]=[n("常量")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/variable_bindings.html"},{default:r(()=>t[19]||(t[19]=[n("变量绑定")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/variable_bindings/mut.html"},{default:r(()=>t[20]||(t[20]=[n("可变变量")])),_:1})]),l("li",null,[i(e,{to:"/variable_bindings/scope.html"},{default:r(()=>t[21]||(t[21]=[n("作用域和遮蔽")])),_:1})]),l("li",null,[i(e,{to:"/variable_bindings/declare.html"},{default:r(()=>t[22]||(t[22]=[n("变量先声明")])),_:1})]),l("li",null,[i(e,{to:"/variable_bindings/freeze.html"},{default:r(()=>t[23]||(t[23]=[n("冻结")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/types.html"},{default:r(()=>t[24]||(t[24]=[n("类型系统")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/types/cast.html"},{default:r(()=>t[25]||(t[25]=[n("类型转换")])),_:1})]),l("li",null,[i(e,{to:"/types/literals.html"},{default:r(()=>t[26]||(t[26]=[n("字面量")])),_:1})]),l("li",null,[i(e,{to:"/types/inference.html"},{default:r(()=>t[27]||(t[27]=[n("类型推断")])),_:1})]),l("li",null,[i(e,{to:"/types/alias.html"},{default:r(()=>t[28]||(t[28]=[n("别名")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/conversion.html"},{default:r(()=>t[29]||(t[29]=[n("类型转换")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/conversion/from_into.html"},{default:r(()=>t[30]||(t[30]=[l("code",null,"From",-1),n(" 和 "),l("code",null,"Into",-1)])),_:1})]),l("li",null,[i(e,{to:"/conversion/try_from_try_into.html"},{default:r(()=>t[31]||(t[31]=[l("code",null,"TryFrom",-1),n(" 和 "),l("code",null,"TryInto",-1)])),_:1})]),l("li",null,[i(e,{to:"/conversion/string.html"},{default:r(()=>t[32]||(t[32]=[l("code",null,"ToString",-1),n(" 和 "),l("code",null,"FromStr",-1)])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/expression.html"},{default:r(()=>t[33]||(t[33]=[n("表达式")])),_:1})])]),l("li",null,[l("p",null,[i(e,{to:"/flow_control.html"},{default:r(()=>t[34]||(t[34]=[n("流程控制")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/flow_control/if_else.html"},{default:r(()=>t[35]||(t[35]=[n("if/else")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/loop.html"},{default:r(()=>t[36]||(t[36]=[n("loop 循环")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/flow_control/loop/nested.html"},{default:r(()=>t[37]||(t[37]=[n("嵌套循环和标签")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/loop/return.html"},{default:r(()=>t[38]||(t[38]=[n("从 loop 循环返回")])),_:1})])])]),l("li",null,[i(e,{to:"/flow_control/while.html"},{default:r(()=>t[39]||(t[39]=[n("while 循环")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/for.html"},{default:r(()=>t[40]||(t[40]=[n("for 循环和区间")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match.html"},{default:r(()=>t[41]||(t[41]=[n("match 匹配")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/flow_control/match/destructuring.html"},{default:r(()=>t[42]||(t[42]=[n("解构")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/flow_control/match/destructuring/destructure_tuple.html"},{default:r(()=>t[43]||(t[43]=[n("元组")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match/destructuring/destructure_slice.html"},{default:r(()=>t[44]||(t[44]=[n("数组/切片")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match/destructuring/destructure_enum.html"},{default:r(()=>t[45]||(t[45]=[n("枚举")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match/destructuring/destructure_pointers.html"},{default:r(()=>t[46]||(t[46]=[n("指针和引用")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match/destructuring/destructure_structures.html"},{default:r(()=>t[47]||(t[47]=[n("结构体")])),_:1})])])]),l("li",null,[i(e,{to:"/flow_control/match/guard.html"},{default:r(()=>t[48]||(t[48]=[n("卫语句")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/match/binding.html"},{default:r(()=>t[49]||(t[49]=[n("绑定")])),_:1})])])]),l("li",null,[i(e,{to:"/flow_control/if_let.html"},{default:r(()=>t[50]||(t[50]=[n("if let")])),_:1})]),l("li",null,[i(e,{to:"/flow_control/while_let.html"},{default:r(()=>t[51]||(t[51]=[n("while let")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/fn.html"},{default:r(()=>t[52]||(t[52]=[n("函数")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/fn/methods.html"},{default:r(()=>t[53]||(t[53]=[n("方法")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures.html"},{default:r(()=>t[54]||(t[54]=[n("闭包")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/fn/closures/capture.html"},{default:r(()=>t[55]||(t[55]=[n("捕获")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/input_parameters.html"},{default:r(()=>t[56]||(t[56]=[n("作为输入参数")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/anonymity.html"},{default:r(()=>t[57]||(t[57]=[n("类型匿名")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/input_functions.html"},{default:r(()=>t[58]||(t[58]=[n("输入函数")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/output_parameters.html"},{default:r(()=>t[59]||(t[59]=[n("作为输出参数")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/closure_examples.html"},{default:r(()=>t[60]||(t[60]=[l("code",null,"std",-1),n(" 中的例子")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/fn/closures/closure_examples/iter_any.html"},{default:r(()=>t[61]||(t[61]=[n("Iterator::any")])),_:1})]),l("li",null,[i(e,{to:"/fn/closures/closure_examples/iter_find.html"},{default:r(()=>t[62]||(t[62]=[n("Iterator::find")])),_:1})])])])])]),l("li",null,[i(e,{to:"/fn/hof.html"},{default:r(()=>t[63]||(t[63]=[n("高阶函数")])),_:1})]),l("li",null,[i(e,{to:"/fn/diverging.html"},{default:r(()=>t[64]||(t[64]=[n("发散函数")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/mod.html"},{default:r(()=>t[65]||(t[65]=[n("模块")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/mod/visibility.html"},{default:r(()=>t[66]||(t[66]=[n("可见性")])),_:1})]),l("li",null,[i(e,{to:"/mod/struct_visibility.html"},{default:r(()=>t[67]||(t[67]=[n("结构体的可见性")])),_:1})]),l("li",null,[i(e,{to:"/mod/use.html"},{default:r(()=>t[68]||(t[68]=[l("code",null,"use",-1),n(" 声明")])),_:1})]),l("li",null,[i(e,{to:"/mod/super.html"},{default:r(()=>t[69]||(t[69]=[l("code",null,"super",-1),n(" 和 "),l("code",null,"self",-1)])),_:1})]),l("li",null,[i(e,{to:"/mod/split.html"},{default:r(()=>t[70]||(t[70]=[n("文件分层")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/crates.html"},{default:r(()=>t[71]||(t[71]=[n("crate")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/crates/lib.html"},{default:r(()=>t[72]||(t[72]=[n("库")])),_:1})]),l("li",null,[i(e,{to:"/crates/using_lib.html"},{default:r(()=>t[73]||(t[73]=[n("使用库")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/cargo.html"},{default:r(()=>t[74]||(t[74]=[n("cargo")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/cargo/deps.html"},{default:r(()=>t[75]||(t[75]=[n("依赖")])),_:1})]),l("li",null,[i(e,{to:"/cargo/conventions.html"},{default:r(()=>t[76]||(t[76]=[n("约定规范")])),_:1})]),l("li",null,[i(e,{to:"/cargo/test.html"},{default:r(()=>t[77]||(t[77]=[n("测试")])),_:1})]),l("li",null,[i(e,{to:"/cargo/build_scripts.html"},{default:r(()=>t[78]||(t[78]=[n("构建脚本")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/attribute.html"},{default:r(()=>t[79]||(t[79]=[n("属性")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/attribute/unused.html"},{default:r(()=>t[80]||(t[80]=[n("死代码 "),l("code",null,"dead_code",-1)])),_:1})]),l("li",null,[i(e,{to:"/attribute/crate.html"},{default:r(()=>t[81]||(t[81]=[l("code",null,"crate",-1)])),_:1})]),l("li",null,[i(e,{to:"/attribute/cfg.html"},{default:r(()=>t[82]||(t[82]=[l("code",null,"cfg",-1)])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/attribute/cfg/custom.html"},{default:r(()=>t[83]||(t[83]=[n("自定义条件")])),_:1})])])])])]),l("li",null,[l("p",null,[i(e,{to:"/generics.html"},{default:r(()=>t[84]||(t[84]=[n("泛型")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/generics/gen_fn.html"},{default:r(()=>t[85]||(t[85]=[n("函数")])),_:1})]),l("li",null,[i(e,{to:"/generics/impl.html"},{default:r(()=>t[86]||(t[86]=[n("实现")])),_:1})]),l("li",null,[i(e,{to:"/generics/gen_trait.html"},{default:r(()=>t[87]||(t[87]=[n("trait")])),_:1})]),l("li",null,[i(e,{to:"/generics/bounds.html"},{default:r(()=>t[88]||(t[88]=[n("约束")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/generics/bounds/testcase_empty.html"},{default:r(()=>t[89]||(t[89]=[n("测试实例：空约束")])),_:1})])])]),l("li",null,[i(e,{to:"/generics/multi_bounds.html"},{default:r(()=>t[90]||(t[90]=[n("多重约束")])),_:1})]),l("li",null,[i(e,{to:"/generics/where.html"},{default:r(()=>t[91]||(t[91]=[n("where 子句")])),_:1})]),l("li",null,[i(e,{to:"/generics/new_types.html"},{default:r(()=>t[92]||(t[92]=[l("code",null,"newtype",-1),n(" 惯用法")])),_:1})]),l("li",null,[i(e,{to:"/generics/assoc_items.html"},{default:r(()=>t[93]||(t[93]=[n("关联项")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/generics/assoc_items/the_problem.html"},{default:r(()=>t[94]||(t[94]=[n("存在问题")])),_:1})]),l("li",null,[i(e,{to:"/generics/assoc_items/types.html"},{default:r(()=>t[95]||(t[95]=[n("关联类型")])),_:1})])])]),l("li",null,[i(e,{to:"/generics/phantom.html"},{default:r(()=>t[96]||(t[96]=[n("虚类型参数")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/generics/phantom/testcase_units.html"},{default:r(()=>t[97]||(t[97]=[n("测试实例：单位检查")])),_:1})])])])])]),l("li",null,[l("p",null,[i(e,{to:"/scope.html"},{default:r(()=>t[98]||(t[98]=[n("作用域规则")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/scope/raii.html"},{default:r(()=>t[99]||(t[99]=[n("RAII")])),_:1})]),l("li",null,[i(e,{to:"/scope/move.html"},{default:r(()=>t[100]||(t[100]=[n("所有权和移动")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/scope/move/mut.html"},{default:r(()=>t[101]||(t[101]=[n("可变性")])),_:1})]),l("li",null,[i(e,{to:"/scope/move/partial_move.html"},{default:r(()=>t[102]||(t[102]=[n("部分移动")])),_:1})])])]),l("li",null,[i(e,{to:"/scope/borrow.html"},{default:r(()=>t[103]||(t[103]=[n("借用")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/scope/borrow/mut.html"},{default:r(()=>t[104]||(t[104]=[n("可变性")])),_:1})]),l("li",null,[i(e,{to:"/scope/borrow/alias.html"},{default:r(()=>t[105]||(t[105]=[n("别名使用")])),_:1})]),l("li",null,[i(e,{to:"/scope/borrow/ref.html"},{default:r(()=>t[106]||(t[106]=[n("ref 模式")])),_:1})])])]),l("li",null,[i(e,{to:"/scope/lifetime.html"},{default:r(()=>t[107]||(t[107]=[n("生命周期")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/scope/lifetime/explicit.html"},{default:r(()=>t[108]||(t[108]=[n("显式标注")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/fn.html"},{default:r(()=>t[109]||(t[109]=[n("函数")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/methods.html"},{default:r(()=>t[110]||(t[110]=[n("方法")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/struct.html"},{default:r(()=>t[111]||(t[111]=[n("结构体")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/trait.html"},{default:r(()=>t[112]||(t[112]=[n("trait")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/lifetime_bounds.html"},{default:r(()=>t[113]||(t[113]=[n("约束")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/lifetime_coercion.html"},{default:r(()=>t[114]||(t[114]=[n("强制转换")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/static_lifetime.html"},{default:r(()=>t[115]||(t[115]=[n("static")])),_:1})]),l("li",null,[i(e,{to:"/scope/lifetime/elision.html"},{default:r(()=>t[116]||(t[116]=[n("省略")])),_:1})])])])])]),l("li",null,[l("p",null,[i(e,{to:"/trait.html"},{default:r(()=>t[117]||(t[117]=[n("特质 trait")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/trait/derive.html"},{default:r(()=>t[118]||(t[118]=[n("派生")])),_:1})]),l("li",null,[i(e,{to:"/trait/dyn.html"},{default:r(()=>t[119]||(t[119]=[n("使用 "),l("code",null,"dyn",-1),n(" 返回 trait")])),_:1})]),l("li",null,[i(e,{to:"/trait/ops.html"},{default:r(()=>t[120]||(t[120]=[n("运算符重载")])),_:1})]),l("li",null,[i(e,{to:"/trait/drop.html"},{default:r(()=>t[121]||(t[121]=[n("Drop")])),_:1})]),l("li",null,[i(e,{to:"/trait/iter.html"},{default:r(()=>t[122]||(t[122]=[n("Iterator")])),_:1})]),l("li",null,[i(e,{to:"/trait/impl_trait.html"},{default:r(()=>t[123]||(t[123]=[l("code",null,"impl Trait",-1)])),_:1})]),l("li",null,[i(e,{to:"/trait/clone.html"},{default:r(()=>t[124]||(t[124]=[n("Clone")])),_:1})]),l("li",null,[i(e,{to:"/trait/supertraits.html"},{default:r(()=>t[125]||(t[125]=[n("父 trait")])),_:1})]),l("li",null,[i(e,{to:"/trait/disambiguating.html"},{default:r(()=>t[126]||(t[126]=[n("消除重叠 trait")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/macros.html"},{default:r(()=>t[127]||(t[127]=[n("使用 "),l("code",null,"macro_rules!",-1),n(" 来创建宏")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/macros/syntax.html"},{default:r(()=>t[128]||(t[128]=[n("语法")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/macros/designators.html"},{default:r(()=>t[129]||(t[129]=[n("指示符")])),_:1})]),l("li",null,[i(e,{to:"/macros/overload.html"},{default:r(()=>t[130]||(t[130]=[n("重载")])),_:1})]),l("li",null,[i(e,{to:"/macros/repeat.html"},{default:r(()=>t[131]||(t[131]=[n("重复")])),_:1})])])]),l("li",null,[i(e,{to:"/macros/dry.html"},{default:r(()=>t[132]||(t[132]=[n("DRY (不写重复代码)")])),_:1})]),l("li",null,[i(e,{to:"/macros/dsl.html"},{default:r(()=>t[133]||(t[133]=[n("DSL (领域专用语言)")])),_:1})]),l("li",null,[i(e,{to:"/macros/variadics.html"},{default:r(()=>t[134]||(t[134]=[n("可变参数接口")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/error.html"},{default:r(()=>t[135]||(t[135]=[n("错误处理")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/error/panic.html"},{default:r(()=>t[136]||(t[136]=[l("code",null,"panic",-1)])),_:1})]),l("li",null,[i(e,{to:"/error/option_unwrap.html"},{default:r(()=>t[137]||(t[137]=[l("code",null,"Option",-1),n(" 和 "),l("code",null,"unwrap",-1)])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/error/option_unwrap/question_mark.html"},{default:r(()=>t[138]||(t[138]=[n("使用 "),l("code",null,"?",-1),n(" 解开 "),l("code",null,"Option",-1)])),_:1})]),l("li",null,[i(e,{to:"/error/option_unwrap/map.html"},{default:r(()=>t[139]||(t[139]=[n("组合算子："),l("code",null,"map",-1)])),_:1})]),l("li",null,[i(e,{to:"/error/option_unwrap/and_then.html"},{default:r(()=>t[140]||(t[140]=[n("组合算子："),l("code",null,"and_then",-1)])),_:1})])])]),l("li",null,[i(e,{to:"/error/result.html"},{default:r(()=>t[141]||(t[141]=[n("结果 "),l("code",null,"Result",-1)])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/error/result/result_map.html"},{default:r(()=>t[142]||(t[142]=[l("code",null,"Result",-1),n(" 的 "),l("code",null,"map",-1)])),_:1})]),l("li",null,[i(e,{to:"/error/result/result_alias.html"},{default:r(()=>t[143]||(t[143]=[n("给 "),l("code",null,"Result",-1),n(" 取别名")])),_:1})]),l("li",null,[i(e,{to:"/error/result/early_returns.html"},{default:r(()=>t[144]||(t[144]=[n("提前返回")])),_:1})]),l("li",null,[i(e,{to:"/error/result/enter_question_mark.html"},{default:r(()=>t[145]||(t[145]=[n("引入 "),l("code",null,"?",-1)])),_:1})])])]),l("li",null,[i(e,{to:"/error/multiple_error_types.html"},{default:r(()=>t[146]||(t[146]=[n("处理多种错误类型")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/error/multiple_error_types/option_result.html"},{default:r(()=>t[147]||(t[147]=[n("从 "),l("code",null,"Option",-1),n(" 中取出 "),l("code",null,"Result",-1)])),_:1})]),l("li",null,[i(e,{to:"/error/multiple_error_types/define_error_type.html"},{default:r(()=>t[148]||(t[148]=[n("定义一种错误类型")])),_:1})]),l("li",null,[i(e,{to:"/error/multiple_error_types/boxing_errors.html"},{default:r(()=>t[149]||(t[149]=[n("把错误 “装箱”")])),_:1})]),l("li",null,[i(e,{to:"/error/multiple_error_types/reenter_question_mark.html"},{default:r(()=>t[150]||(t[150]=[l("code",null,"?",-1),n(" 的其他用法")])),_:1})]),l("li",null,[i(e,{to:"/error/multiple_error_types/wrap_error.html"},{default:r(()=>t[151]||(t[151]=[n("包裹错误")])),_:1})])])]),l("li",null,[i(e,{to:"/error/iter_result.html"},{default:r(()=>t[152]||(t[152]=[n("遍历 "),l("code",null,"Result",-1)])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/std.html"},{default:r(()=>t[153]||(t[153]=[n("标准库类型")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/std/box.html"},{default:r(()=>t[154]||(t[154]=[n("箱子、栈和堆")])),_:1})]),l("li",null,[i(e,{to:"/std/vec.html"},{default:r(()=>t[155]||(t[155]=[n("动态数组 vector")])),_:1})]),l("li",null,[i(e,{to:"/std/str.html"},{default:r(()=>t[156]||(t[156]=[n("字符串 String")])),_:1})]),l("li",null,[i(e,{to:"/std/option.html"},{default:r(()=>t[157]||(t[157]=[n("选项 "),l("code",null,"Option",-1)])),_:1})]),l("li",null,[i(e,{to:"/std/result.html"},{default:r(()=>t[158]||(t[158]=[n("结果 "),l("code",null,"Result",-1)])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std/result/question_mark.html"},{default:r(()=>t[159]||(t[159]=[l("code",null,"?",-1),n(" 用法")])),_:1})])])]),l("li",null,[i(e,{to:"/std/panic.html"},{default:r(()=>t[160]||(t[160]=[l("code",null,"panic!",-1)])),_:1})]),l("li",null,[i(e,{to:"/std/hash.html"},{default:r(()=>t[161]||(t[161]=[n("散列表 HashMap")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std/hash/alt_key_types.html"},{default:r(()=>t[162]||(t[162]=[n("更改或自定义关键字类型")])),_:1})]),l("li",null,[i(e,{to:"/std/hash/hashset.html"},{default:r(()=>t[163]||(t[163]=[n("散列集 HashSet")])),_:1})])])]),l("li",null,[i(e,{to:"/std/rc.html"},{default:r(()=>t[164]||(t[164]=[n("引用计数 Rc")])),_:1})]),l("li",null,[i(e,{to:"/std/arc.html"},{default:r(()=>t[165]||(t[165]=[n("共享引用计数 Arc")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/std_misc.html"},{default:r(()=>t[166]||(t[166]=[n("标准库更多介绍")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/std_misc/threads.html"},{default:r(()=>t[167]||(t[167]=[n("线程")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std_misc/threads/testcase_mapreduce.html"},{default:r(()=>t[168]||(t[168]=[n("测试实例：map-reduce")])),_:1})])])]),l("li",null,[i(e,{to:"/std_misc/channels.html"},{default:r(()=>t[169]||(t[169]=[n("通道")])),_:1})]),l("li",null,[i(e,{to:"/std_misc/path.html"},{default:r(()=>t[170]||(t[170]=[n("路径")])),_:1})]),l("li",null,[i(e,{to:"/std_misc/file.html"},{default:r(()=>t[171]||(t[171]=[n("文件输入输出（I/O）")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std_misc/file/open.html"},{default:r(()=>t[172]||(t[172]=[n("打开文件 "),l("code",null,"open",-1)])),_:1})]),l("li",null,[i(e,{to:"/std_misc/file/create.html"},{default:r(()=>t[173]||(t[173]=[n("创建文件 "),l("code",null,"create",-1)])),_:1})]),l("li",null,[i(e,{to:"/std_misc/file/read_lines.html"},{default:r(()=>t[174]||(t[174]=[n("读取行 "),l("code",null,"read lines",-1)])),_:1})])])]),l("li",null,[i(e,{to:"/std_misc/process.html"},{default:r(()=>t[175]||(t[175]=[n("子进程")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std_misc/process/pipe.html"},{default:r(()=>t[176]||(t[176]=[n("管道")])),_:1})]),l("li",null,[i(e,{to:"/std_misc/process/wait.html"},{default:r(()=>t[177]||(t[177]=[n("等待")])),_:1})])])]),l("li",null,[i(e,{to:"/std_misc/fs.html"},{default:r(()=>t[178]||(t[178]=[n("文件系统操作")])),_:1})]),l("li",null,[i(e,{to:"/std_misc/arg.html"},{default:r(()=>t[179]||(t[179]=[n("程序参数")])),_:1}),l("ul",null,[l("li",null,[i(e,{to:"/std_misc/arg/matching.html"},{default:r(()=>t[180]||(t[180]=[n("参数解析")])),_:1})])])]),l("li",null,[i(e,{to:"/std_misc/ffi.html"},{default:r(()=>t[181]||(t[181]=[n("外部语言函数接口")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/testing.html"},{default:r(()=>t[182]||(t[182]=[n("测试")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/testing/unit_testing.html"},{default:r(()=>t[183]||(t[183]=[n("单元测试")])),_:1})]),l("li",null,[i(e,{to:"/testing/doc_testing.html"},{default:r(()=>t[184]||(t[184]=[n("文档测试")])),_:1})]),l("li",null,[i(e,{to:"/testing/integration_testing.html"},{default:r(()=>t[185]||(t[185]=[n("集成测试")])),_:1})]),l("li",null,[i(e,{to:"/testing/dev_dependencies.html"},{default:r(()=>t[186]||(t[186]=[n("开发依赖")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/unsafe.html"},{default:r(()=>t[187]||(t[187]=[n("不安全操作")])),_:1})])]),l("li",null,[l("p",null,[i(e,{to:"/compatibility.html"},{default:r(()=>t[188]||(t[188]=[n("兼容性")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/compatibility/raw_identifiers.html"},{default:r(()=>t[189]||(t[189]=[n("原始标志符")])),_:1})])])]),l("li",null,[l("p",null,[i(e,{to:"/meta.html"},{default:r(()=>t[190]||(t[190]=[n("补充")])),_:1})]),l("ul",null,[l("li",null,[i(e,{to:"/meta/doc.html"},{default:r(()=>t[191]||(t[191]=[n("文档")])),_:1})]),l("li",null,[i(e,{to:"/meta/playpen.html"},{default:r(()=>t[192]||(t[192]=[n("Playpen")])),_:1})])])])])])}const _=a(u,[["render",d],["__file","SUMMARY.html.vue"]]),k=JSON.parse('{"path":"/SUMMARY.html","title":"Summary","lang":"zh-CN","frontmatter":{"description":"Summary","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/SUMMARY.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"Summary"}],["meta",{"property":"og:description","content":"Summary"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Summary\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.97,"words":891},"filePathRelative":"SUMMARY.md","excerpt":"\\n<p><a href=\\"/rust-by-example-cn-/\\" target=\\"_blank\\">简介</a></p>\\n<ul>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/hello.html\\" target=\\"_blank\\">Hello World</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/hello/comment.html\\" target=\\"_blank\\">注释</a></li>\\n<li><a href=\\"/rust-by-example-cn-/hello/print.html\\" target=\\"_blank\\">格式化输出</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/hello/print/print_debug.html\\" target=\\"_blank\\">调试（debug）</a></li>\\n<li><a href=\\"/rust-by-example-cn-/hello/print/print_display.html\\" target=\\"_blank\\">显示（display）</a></li>\\n<li><a href=\\"/rust-by-example-cn-/hello/print/print_display/testcase_list.html\\" target=\\"_blank\\">测试实例：List</a></li>\\n<li><a href=\\"/rust-by-example-cn-/hello/print/fmt.html\\" target=\\"_blank\\">格式化</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/primitives.html\\" target=\\"_blank\\">原生类型</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/primitives/literals.html\\" target=\\"_blank\\">字面量和运算符</a></li>\\n<li><a href=\\"/rust-by-example-cn-/primitives/tuples.html\\" target=\\"_blank\\">元组</a></li>\\n<li><a href=\\"/rust-by-example-cn-/primitives/array.html\\" target=\\"_blank\\">数组和切片</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/custom_types.html\\" target=\\"_blank\\">自定义类型</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/structs.html\\" target=\\"_blank\\">结构体</a></li>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/enum.html\\" target=\\"_blank\\">枚举</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/enum/enum_use.html\\" target=\\"_blank\\">使用 use</a></li>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/enum/c_like.html\\" target=\\"_blank\\">C 风格用法</a></li>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/enum/testcase_linked_list.html\\" target=\\"_blank\\">测试实例：链表</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/custom_types/constants.html\\" target=\\"_blank\\">常量</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/variable_bindings.html\\" target=\\"_blank\\">变量绑定</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/variable_bindings/mut.html\\" target=\\"_blank\\">可变变量</a></li>\\n<li><a href=\\"/rust-by-example-cn-/variable_bindings/scope.html\\" target=\\"_blank\\">作用域和遮蔽</a></li>\\n<li><a href=\\"/rust-by-example-cn-/variable_bindings/declare.html\\" target=\\"_blank\\">变量先声明</a></li>\\n<li><a href=\\"/rust-by-example-cn-/variable_bindings/freeze.html\\" target=\\"_blank\\">冻结</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/types.html\\" target=\\"_blank\\">类型系统</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/types/cast.html\\" target=\\"_blank\\">类型转换</a></li>\\n<li><a href=\\"/rust-by-example-cn-/types/literals.html\\" target=\\"_blank\\">字面量</a></li>\\n<li><a href=\\"/rust-by-example-cn-/types/inference.html\\" target=\\"_blank\\">类型推断</a></li>\\n<li><a href=\\"/rust-by-example-cn-/types/alias.html\\" target=\\"_blank\\">别名</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/conversion.html\\" target=\\"_blank\\">类型转换</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/conversion/from_into.html\\" target=\\"_blank\\"><code>From</code> 和 <code>Into</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/conversion/try_from_try_into.html\\" target=\\"_blank\\"><code>TryFrom</code> 和 <code>TryInto</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/conversion/string.html\\" target=\\"_blank\\"><code>ToString</code> 和 <code>FromStr</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/expression.html\\" target=\\"_blank\\">表达式</a></p>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/flow_control.html\\" target=\\"_blank\\">流程控制</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/if_else.html\\" target=\\"_blank\\">if/else</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/loop.html\\" target=\\"_blank\\">loop 循环</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/loop/nested.html\\" target=\\"_blank\\">嵌套循环和标签</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/loop/return.html\\" target=\\"_blank\\">从 loop 循环返回</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/while.html\\" target=\\"_blank\\">while 循环</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/for.html\\" target=\\"_blank\\">for 循环和区间</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match.html\\" target=\\"_blank\\">match 匹配</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring.html\\" target=\\"_blank\\">解构</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring/destructure_tuple.html\\" target=\\"_blank\\">元组</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring/destructure_slice.html\\" target=\\"_blank\\">数组/切片</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring/destructure_enum.html\\" target=\\"_blank\\">枚举</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring/destructure_pointers.html\\" target=\\"_blank\\">指针和引用</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/destructuring/destructure_structures.html\\" target=\\"_blank\\">结构体</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/guard.html\\" target=\\"_blank\\">卫语句</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/match/binding.html\\" target=\\"_blank\\">绑定</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/if_let.html\\" target=\\"_blank\\">if let</a></li>\\n<li><a href=\\"/rust-by-example-cn-/flow_control/while_let.html\\" target=\\"_blank\\">while let</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/fn.html\\" target=\\"_blank\\">函数</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/fn/methods.html\\" target=\\"_blank\\">方法</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures.html\\" target=\\"_blank\\">闭包</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/capture.html\\" target=\\"_blank\\">捕获</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/input_parameters.html\\" target=\\"_blank\\">作为输入参数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/anonymity.html\\" target=\\"_blank\\">类型匿名</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/input_functions.html\\" target=\\"_blank\\">输入函数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/output_parameters.html\\" target=\\"_blank\\">作为输出参数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/closure_examples.html\\" target=\\"_blank\\"><code>std</code> 中的例子</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/closure_examples/iter_any.html\\" target=\\"_blank\\">Iterator::any</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/closures/closure_examples/iter_find.html\\" target=\\"_blank\\">Iterator::find</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/fn/hof.html\\" target=\\"_blank\\">高阶函数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/fn/diverging.html\\" target=\\"_blank\\">发散函数</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/mod.html\\" target=\\"_blank\\">模块</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/mod/visibility.html\\" target=\\"_blank\\">可见性</a></li>\\n<li><a href=\\"/rust-by-example-cn-/mod/struct_visibility.html\\" target=\\"_blank\\">结构体的可见性</a></li>\\n<li><a href=\\"/rust-by-example-cn-/mod/use.html\\" target=\\"_blank\\"><code>use</code> 声明</a></li>\\n<li><a href=\\"/rust-by-example-cn-/mod/super.html\\" target=\\"_blank\\"><code>super</code> 和 <code>self</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/mod/split.html\\" target=\\"_blank\\">文件分层</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/crates.html\\" target=\\"_blank\\">crate</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/crates/lib.html\\" target=\\"_blank\\">库</a></li>\\n<li><a href=\\"/rust-by-example-cn-/crates/using_lib.html\\" target=\\"_blank\\">使用库</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/cargo.html\\" target=\\"_blank\\">cargo</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/cargo/deps.html\\" target=\\"_blank\\">依赖</a></li>\\n<li><a href=\\"/rust-by-example-cn-/cargo/conventions.html\\" target=\\"_blank\\">约定规范</a></li>\\n<li><a href=\\"/rust-by-example-cn-/cargo/test.html\\" target=\\"_blank\\">测试</a></li>\\n<li><a href=\\"/rust-by-example-cn-/cargo/build_scripts.html\\" target=\\"_blank\\">构建脚本</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/attribute.html\\" target=\\"_blank\\">属性</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/attribute/unused.html\\" target=\\"_blank\\">死代码 <code>dead_code</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/attribute/crate.html\\" target=\\"_blank\\"><code>crate</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/attribute/cfg.html\\" target=\\"_blank\\"><code>cfg</code></a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/attribute/cfg/custom.html\\" target=\\"_blank\\">自定义条件</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/generics.html\\" target=\\"_blank\\">泛型</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/generics/gen_fn.html\\" target=\\"_blank\\">函数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/impl.html\\" target=\\"_blank\\">实现</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/gen_trait.html\\" target=\\"_blank\\">trait</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/bounds.html\\" target=\\"_blank\\">约束</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/generics/bounds/testcase_empty.html\\" target=\\"_blank\\">测试实例：空约束</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/generics/multi_bounds.html\\" target=\\"_blank\\">多重约束</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/where.html\\" target=\\"_blank\\">where 子句</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/new_types.html\\" target=\\"_blank\\"><code>newtype</code> 惯用法</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/assoc_items.html\\" target=\\"_blank\\">关联项</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/generics/assoc_items/the_problem.html\\" target=\\"_blank\\">存在问题</a></li>\\n<li><a href=\\"/rust-by-example-cn-/generics/assoc_items/types.html\\" target=\\"_blank\\">关联类型</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/generics/phantom.html\\" target=\\"_blank\\">虚类型参数</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/generics/phantom/testcase_units.html\\" target=\\"_blank\\">测试实例：单位检查</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/scope.html\\" target=\\"_blank\\">作用域规则</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/scope/raii.html\\" target=\\"_blank\\">RAII</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/move.html\\" target=\\"_blank\\">所有权和移动</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/scope/move/mut.html\\" target=\\"_blank\\">可变性</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/move/partial_move.html\\" target=\\"_blank\\">部分移动</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/scope/borrow.html\\" target=\\"_blank\\">借用</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/scope/borrow/mut.html\\" target=\\"_blank\\">可变性</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/borrow/alias.html\\" target=\\"_blank\\">别名使用</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/borrow/ref.html\\" target=\\"_blank\\">ref 模式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime.html\\" target=\\"_blank\\">生命周期</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/explicit.html\\" target=\\"_blank\\">显式标注</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/fn.html\\" target=\\"_blank\\">函数</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/methods.html\\" target=\\"_blank\\">方法</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/struct.html\\" target=\\"_blank\\">结构体</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/trait.html\\" target=\\"_blank\\">trait</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/lifetime_bounds.html\\" target=\\"_blank\\">约束</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/lifetime_coercion.html\\" target=\\"_blank\\">强制转换</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/static_lifetime.html\\" target=\\"_blank\\">static</a></li>\\n<li><a href=\\"/rust-by-example-cn-/scope/lifetime/elision.html\\" target=\\"_blank\\">省略</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/trait.html\\" target=\\"_blank\\">特质 trait</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/trait/derive.html\\" target=\\"_blank\\">派生</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/dyn.html\\" target=\\"_blank\\">使用 <code>dyn</code> 返回 trait</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/ops.html\\" target=\\"_blank\\">运算符重载</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/drop.html\\" target=\\"_blank\\">Drop</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/iter.html\\" target=\\"_blank\\">Iterator</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/impl_trait.html\\" target=\\"_blank\\"><code>impl Trait</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/clone.html\\" target=\\"_blank\\">Clone</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/supertraits.html\\" target=\\"_blank\\">父 trait</a></li>\\n<li><a href=\\"/rust-by-example-cn-/trait/disambiguating.html\\" target=\\"_blank\\">消除重叠 trait</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/macros.html\\" target=\\"_blank\\">使用 <code>macro_rules!</code> 来创建宏</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/macros/syntax.html\\" target=\\"_blank\\">语法</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/macros/designators.html\\" target=\\"_blank\\">指示符</a></li>\\n<li><a href=\\"/rust-by-example-cn-/macros/overload.html\\" target=\\"_blank\\">重载</a></li>\\n<li><a href=\\"/rust-by-example-cn-/macros/repeat.html\\" target=\\"_blank\\">重复</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/macros/dry.html\\" target=\\"_blank\\">DRY (不写重复代码)</a></li>\\n<li><a href=\\"/rust-by-example-cn-/macros/dsl.html\\" target=\\"_blank\\">DSL (领域专用语言)</a></li>\\n<li><a href=\\"/rust-by-example-cn-/macros/variadics.html\\" target=\\"_blank\\">可变参数接口</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/error.html\\" target=\\"_blank\\">错误处理</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/error/panic.html\\" target=\\"_blank\\"><code>panic</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/option_unwrap.html\\" target=\\"_blank\\"><code>Option</code> 和 <code>unwrap</code></a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/error/option_unwrap/question_mark.html\\" target=\\"_blank\\">使用 <code>?</code> 解开 <code>Option</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/option_unwrap/map.html\\" target=\\"_blank\\">组合算子：<code>map</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/option_unwrap/and_then.html\\" target=\\"_blank\\">组合算子：<code>and_then</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/error/result.html\\" target=\\"_blank\\">结果 <code>Result</code></a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/error/result/result_map.html\\" target=\\"_blank\\"><code>Result</code> 的 <code>map</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/result/result_alias.html\\" target=\\"_blank\\">给 <code>Result</code> 取别名</a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/result/early_returns.html\\" target=\\"_blank\\">提前返回</a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/result/enter_question_mark.html\\" target=\\"_blank\\">引入 <code>?</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types.html\\" target=\\"_blank\\">处理多种错误类型</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types/option_result.html\\" target=\\"_blank\\">从 <code>Option</code> 中取出 <code>Result</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types/define_error_type.html\\" target=\\"_blank\\">定义一种错误类型</a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types/boxing_errors.html\\" target=\\"_blank\\">把错误 “装箱”</a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types/reenter_question_mark.html\\" target=\\"_blank\\"><code>?</code> 的其他用法</a></li>\\n<li><a href=\\"/rust-by-example-cn-/error/multiple_error_types/wrap_error.html\\" target=\\"_blank\\">包裹错误</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/error/iter_result.html\\" target=\\"_blank\\">遍历 <code>Result</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/std.html\\" target=\\"_blank\\">标准库类型</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std/box.html\\" target=\\"_blank\\">箱子、栈和堆</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/vec.html\\" target=\\"_blank\\">动态数组 vector</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/str.html\\" target=\\"_blank\\">字符串 String</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/option.html\\" target=\\"_blank\\">选项 <code>Option</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/result.html\\" target=\\"_blank\\">结果 <code>Result</code></a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std/result/question_mark.html\\" target=\\"_blank\\"><code>?</code> 用法</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std/panic.html\\" target=\\"_blank\\"><code>panic!</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/hash.html\\" target=\\"_blank\\">散列表 HashMap</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std/hash/alt_key_types.html\\" target=\\"_blank\\">更改或自定义关键字类型</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/hash/hashset.html\\" target=\\"_blank\\">散列集 HashSet</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std/rc.html\\" target=\\"_blank\\">引用计数 Rc</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std/arc.html\\" target=\\"_blank\\">共享引用计数 Arc</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/std_misc.html\\" target=\\"_blank\\">标准库更多介绍</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/threads.html\\" target=\\"_blank\\">线程</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/threads/testcase_mapreduce.html\\" target=\\"_blank\\">测试实例：map-reduce</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/channels.html\\" target=\\"_blank\\">通道</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/path.html\\" target=\\"_blank\\">路径</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/file.html\\" target=\\"_blank\\">文件输入输出（I/O）</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/file/open.html\\" target=\\"_blank\\">打开文件 <code>open</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/file/create.html\\" target=\\"_blank\\">创建文件 <code>create</code></a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/file/read_lines.html\\" target=\\"_blank\\">读取行 <code>read lines</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/process.html\\" target=\\"_blank\\">子进程</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/process/pipe.html\\" target=\\"_blank\\">管道</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/process/wait.html\\" target=\\"_blank\\">等待</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/fs.html\\" target=\\"_blank\\">文件系统操作</a></li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/arg.html\\" target=\\"_blank\\">程序参数</a>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/arg/matching.html\\" target=\\"_blank\\">参数解析</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"/rust-by-example-cn-/std_misc/ffi.html\\" target=\\"_blank\\">外部语言函数接口</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/testing.html\\" target=\\"_blank\\">测试</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/testing/unit_testing.html\\" target=\\"_blank\\">单元测试</a></li>\\n<li><a href=\\"/rust-by-example-cn-/testing/doc_testing.html\\" target=\\"_blank\\">文档测试</a></li>\\n<li><a href=\\"/rust-by-example-cn-/testing/integration_testing.html\\" target=\\"_blank\\">集成测试</a></li>\\n<li><a href=\\"/rust-by-example-cn-/testing/dev_dependencies.html\\" target=\\"_blank\\">开发依赖</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/unsafe.html\\" target=\\"_blank\\">不安全操作</a></p>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/compatibility.html\\" target=\\"_blank\\">兼容性</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/compatibility/raw_identifiers.html\\" target=\\"_blank\\">原始标志符</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/rust-by-example-cn-/meta.html\\" target=\\"_blank\\">补充</a></p>\\n<ul>\\n<li><a href=\\"/rust-by-example-cn-/meta/doc.html\\" target=\\"_blank\\">文档</a></li>\\n<li><a href=\\"/rust-by-example-cn-/meta/playpen.html\\" target=\\"_blank\\">Playpen</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"index","link":"index.html"},{"title":"hello","link":"hello.html"},{"title":"comment","link":"hello/comment.html"},{"title":"print","link":"hello/print.html"},{"title":"print_debug","link":"hello/print/print_debug.html"},{"title":"print_display","link":"hello/print/print_display.html"},{"title":"testcase_list","link":"hello/print/print_display/testcase_list.html"},{"title":"fmt","link":"hello/print/fmt.html"},{"title":"primitives","link":"primitives.html"},{"title":"literals","link":"primitives/literals.html"},{"title":"tuples","link":"primitives/tuples.html"},{"title":"array","link":"primitives/array.html"},{"title":"custom_types","link":"custom_types.html"},{"title":"structs","link":"custom_types/structs.html"},{"title":"enum","link":"custom_types/enum.html"},{"title":"enum_use","link":"custom_types/enum/enum_use.html"},{"title":"c_like","link":"custom_types/enum/c_like.html"},{"title":"testcase_linked_list","link":"custom_types/enum/testcase_linked_list.html"},{"title":"constants","link":"custom_types/constants.html"},{"title":"variable_bindings","link":"variable_bindings.html"},{"title":"mut","link":"variable_bindings/mut.html"},{"title":"scope","link":"variable_bindings/scope.html"},{"title":"declare","link":"variable_bindings/declare.html"},{"title":"freeze","link":"variable_bindings/freeze.html"},{"title":"types","link":"types.html"},{"title":"cast","link":"types/cast.html"},{"title":"literals","link":"types/literals.html"},{"title":"inference","link":"types/inference.html"},{"title":"alias","link":"types/alias.html"},{"title":"conversion","link":"conversion.html"},{"title":"from_into","link":"conversion/from_into.html"},{"title":"try_from_try_into","link":"conversion/try_from_try_into.html"},{"title":"string","link":"conversion/string.html"},{"title":"expression","link":"expression.html"},{"title":"flow_control","link":"flow_control.html"},{"title":"if_else","link":"flow_control/if_else.html"},{"title":"loop","link":"flow_control/loop.html"},{"title":"nested","link":"flow_control/loop/nested.html"},{"title":"return","link":"flow_control/loop/return.html"},{"title":"while","link":"flow_control/while.html"},{"title":"for","link":"flow_control/for.html"},{"title":"match","link":"flow_control/match.html"},{"title":"destructuring","link":"flow_control/match/destructuring.html"},{"title":"destructure_tuple","link":"flow_control/match/destructuring/destructure_tuple.html"},{"title":"destructure_slice","link":"flow_control/match/destructuring/destructure_slice.html"},{"title":"destructure_enum","link":"flow_control/match/destructuring/destructure_enum.html"},{"title":"destructure_pointers","link":"flow_control/match/destructuring/destructure_pointers.html"},{"title":"destructure_structures","link":"flow_control/match/destructuring/destructure_structures.html"},{"title":"guard","link":"flow_control/match/guard.html"},{"title":"binding","link":"flow_control/match/binding.html"},{"title":"if_let","link":"flow_control/if_let.html"},{"title":"while_let","link":"flow_control/while_let.html"},{"title":"fn","link":"fn.html"},{"title":"methods","link":"fn/methods.html"},{"title":"closures","link":"fn/closures.html"},{"title":"capture","link":"fn/closures/capture.html"},{"title":"input_parameters","link":"fn/closures/input_parameters.html"},{"title":"anonymity","link":"fn/closures/anonymity.html"},{"title":"input_functions","link":"fn/closures/input_functions.html"},{"title":"output_parameters","link":"fn/closures/output_parameters.html"},{"title":"closure_examples","link":"fn/closures/closure_examples.html"},{"title":"iter_any","link":"fn/closures/closure_examples/iter_any.html"},{"title":"iter_find","link":"fn/closures/closure_examples/iter_find.html"},{"title":"hof","link":"fn/hof.html"},{"title":"diverging","link":"fn/diverging.html"},{"title":"mod","link":"mod.html"},{"title":"visibility","link":"mod/visibility.html"},{"title":"struct_visibility","link":"mod/struct_visibility.html"},{"title":"use","link":"mod/use.html"},{"title":"super","link":"mod/super.html"},{"title":"split","link":"mod/split.html"},{"title":"crates","link":"crates.html"},{"title":"lib","link":"crates/lib.html"},{"title":"using_lib","link":"crates/using_lib.html"},{"title":"cargo","link":"cargo.html"},{"title":"deps","link":"cargo/deps.html"},{"title":"conventions","link":"cargo/conventions.html"},{"title":"test","link":"cargo/test.html"},{"title":"build_scripts","link":"cargo/build_scripts.html"},{"title":"attribute","link":"attribute.html"},{"title":"unused","link":"attribute/unused.html"},{"title":"crate","link":"attribute/crate.html"},{"title":"cfg","link":"attribute/cfg.html"},{"title":"custom","link":"attribute/cfg/custom.html"},{"title":"generics","link":"generics.html"},{"title":"gen_fn","link":"generics/gen_fn.html"},{"title":"impl","link":"generics/impl.html"},{"title":"gen_trait","link":"generics/gen_trait.html"},{"title":"bounds","link":"generics/bounds.html"},{"title":"testcase_empty","link":"generics/bounds/testcase_empty.html"},{"title":"multi_bounds","link":"generics/multi_bounds.html"},{"title":"where","link":"generics/where.html"},{"title":"new_types","link":"generics/new_types.html"},{"title":"assoc_items","link":"generics/assoc_items.html"},{"title":"the_problem","link":"generics/assoc_items/the_problem.html"},{"title":"types","link":"generics/assoc_items/types.html"},{"title":"phantom","link":"generics/phantom.html"},{"title":"testcase_units","link":"generics/phantom/testcase_units.html"},{"title":"scope","link":"scope.html"},{"title":"raii","link":"scope/raii.html"},{"title":"move","link":"scope/move.html"},{"title":"mut","link":"scope/move/mut.html"},{"title":"partial_move","link":"scope/move/partial_move.html"},{"title":"borrow","link":"scope/borrow.html"},{"title":"mut","link":"scope/borrow/mut.html"},{"title":"alias","link":"scope/borrow/alias.html"},{"title":"ref","link":"scope/borrow/ref.html"},{"title":"lifetime","link":"scope/lifetime.html"},{"title":"explicit","link":"scope/lifetime/explicit.html"},{"title":"fn","link":"scope/lifetime/fn.html"},{"title":"methods","link":"scope/lifetime/methods.html"},{"title":"struct","link":"scope/lifetime/struct.html"},{"title":"trait","link":"scope/lifetime/trait.html"},{"title":"lifetime_bounds","link":"scope/lifetime/lifetime_bounds.html"},{"title":"lifetime_coercion","link":"scope/lifetime/lifetime_coercion.html"},{"title":"static_lifetime","link":"scope/lifetime/static_lifetime.html"},{"title":"elision","link":"scope/lifetime/elision.html"},{"title":"trait","link":"trait.html"},{"title":"derive","link":"trait/derive.html"},{"title":"dyn","link":"trait/dyn.html"},{"title":"ops","link":"trait/ops.html"},{"title":"drop","link":"trait/drop.html"},{"title":"iter","link":"trait/iter.html"},{"title":"impl_trait","link":"trait/impl_trait.html"},{"title":"clone","link":"trait/clone.html"},{"title":"supertraits","link":"trait/supertraits.html"},{"title":"disambiguating","link":"trait/disambiguating.html"},{"title":"macros","link":"macros.html"},{"title":"syntax","link":"macros/syntax.html"},{"title":"designators","link":"macros/designators.html"},{"title":"overload","link":"macros/overload.html"},{"title":"repeat","link":"macros/repeat.html"},{"title":"dry","link":"macros/dry.html"},{"title":"dsl","link":"macros/dsl.html"},{"title":"variadics","link":"macros/variadics.html"},{"title":"error","link":"error.html"},{"title":"panic","link":"error/panic.html"},{"title":"option_unwrap","link":"error/option_unwrap.html"},{"title":"question_mark","link":"error/option_unwrap/question_mark.html"},{"title":"map","link":"error/option_unwrap/map.html"},{"title":"and_then","link":"error/option_unwrap/and_then.html"},{"title":"result","link":"error/result.html"},{"title":"result_map","link":"error/result/result_map.html"},{"title":"result_alias","link":"error/result/result_alias.html"},{"title":"early_returns","link":"error/result/early_returns.html"},{"title":"enter_question_mark","link":"error/result/enter_question_mark.html"},{"title":"multiple_error_types","link":"error/multiple_error_types.html"},{"title":"option_result","link":"error/multiple_error_types/option_result.html"},{"title":"define_error_type","link":"error/multiple_error_types/define_error_type.html"},{"title":"boxing_errors","link":"error/multiple_error_types/boxing_errors.html"},{"title":"reenter_question_mark","link":"error/multiple_error_types/reenter_question_mark.html"},{"title":"wrap_error","link":"error/multiple_error_types/wrap_error.html"},{"title":"iter_result","link":"error/iter_result.html"},{"title":"std","link":"std.html"},{"title":"box","link":"std/box.html"},{"title":"vec","link":"std/vec.html"},{"title":"str","link":"std/str.html"},{"title":"option","link":"std/option.html"},{"title":"result","link":"std/result.html"},{"title":"question_mark","link":"std/result/question_mark.html"},{"title":"panic","link":"std/panic.html"},{"title":"hash","link":"std/hash.html"},{"title":"alt_key_types","link":"std/hash/alt_key_types.html"},{"title":"hashset","link":"std/hash/hashset.html"},{"title":"rc","link":"std/rc.html"},{"title":"arc","link":"std/arc.html"},{"title":"std_misc","link":"std_misc.html"},{"title":"threads","link":"std_misc/threads.html"},{"title":"testcase_mapreduce","link":"std_misc/threads/testcase_mapreduce.html"},{"title":"channels","link":"std_misc/channels.html"},{"title":"path","link":"std_misc/path.html"},{"title":"file","link":"std_misc/file.html"},{"title":"open","link":"std_misc/file/open.html"},{"title":"create","link":"std_misc/file/create.html"},{"title":"read_lines","link":"std_misc/file/read_lines.html"},{"title":"process","link":"std_misc/process.html"},{"title":"pipe","link":"std_misc/process/pipe.html"},{"title":"wait","link":"std_misc/process/wait.html"},{"title":"fs","link":"std_misc/fs.html"},{"title":"arg","link":"std_misc/arg.html"},{"title":"matching","link":"std_misc/arg/matching.html"},{"title":"ffi","link":"std_misc/ffi.html"},{"title":"testing","link":"testing.html"},{"title":"unit_testing","link":"testing/unit_testing.html"},{"title":"doc_testing","link":"testing/doc_testing.html"},{"title":"integration_testing","link":"testing/integration_testing.html"},{"title":"dev_dependencies","link":"testing/dev_dependencies.html"},{"title":"unsafe","link":"unsafe.html"},{"title":"compatibility","link":"compatibility.html"},{"title":"raw_identifiers","link":"compatibility/raw_identifiers.html"},{"title":"meta","link":"meta.html"},{"title":"doc","link":"meta/doc.html"},{"title":"playpen","link":"meta/playpen.html"}],"backlink":[],"localMap":{"nodes":[{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":["index.md","hello.md","hello/comment.md","hello/print.md","hello/print/print_debug.md","hello/print/print_display.md","hello/print/print_display/testcase_list.md","hello/print/fmt.md","primitives.md","primitives/literals.md","primitives/tuples.md","primitives/array.md","custom_types.md","custom_types/structs.md","custom_types/enum.md","custom_types/enum/enum_use.md","custom_types/enum/c_like.md","custom_types/enum/testcase_linked_list.md","custom_types/constants.md","variable_bindings.md","variable_bindings/mut.md","variable_bindings/scope.md","variable_bindings/declare.md","variable_bindings/freeze.md","types.md","types/cast.md","types/literals.md","types/inference.md","types/alias.md","conversion.md","conversion/from_into.md","conversion/try_from_try_into.md","conversion/string.md","expression.md","flow_control.md","flow_control/if_else.md","flow_control/loop.md","flow_control/loop/nested.md","flow_control/loop/return.md","flow_control/while.md","flow_control/for.md","flow_control/match.md","flow_control/match/destructuring.md","flow_control/match/destructuring/destructure_tuple.md","flow_control/match/destructuring/destructure_slice.md","flow_control/match/destructuring/destructure_enum.md","flow_control/match/destructuring/destructure_pointers.md","flow_control/match/destructuring/destructure_structures.md","flow_control/match/guard.md","flow_control/match/binding.md","flow_control/if_let.md","flow_control/while_let.md","fn.md","fn/methods.md","fn/closures.md","fn/closures/capture.md","fn/closures/input_parameters.md","fn/closures/anonymity.md","fn/closures/input_functions.md","fn/closures/output_parameters.md","fn/closures/closure_examples.md","fn/closures/closure_examples/iter_any.md","fn/closures/closure_examples/iter_find.md","fn/hof.md","fn/diverging.md","mod.md","mod/visibility.md","mod/struct_visibility.md","mod/use.md","mod/super.md","mod/split.md","crates.md","crates/lib.md","crates/using_lib.md","cargo.md","cargo/deps.md","cargo/conventions.md","cargo/test.md","cargo/build_scripts.md","attribute.md","attribute/unused.md","attribute/crate.md","attribute/cfg.md","attribute/cfg/custom.md","generics.md","generics/gen_fn.md","generics/impl.md","generics/gen_trait.md","generics/bounds.md","generics/bounds/testcase_empty.md","generics/multi_bounds.md","generics/where.md","generics/new_types.md","generics/assoc_items.md","generics/assoc_items/the_problem.md","generics/assoc_items/types.md","generics/phantom.md","generics/phantom/testcase_units.md","scope.md","scope/raii.md","scope/move.md","scope/move/mut.md","scope/move/partial_move.md","scope/borrow.md","scope/borrow/mut.md","scope/borrow/alias.md","scope/borrow/ref.md","scope/lifetime.md","scope/lifetime/explicit.md","scope/lifetime/fn.md","scope/lifetime/methods.md","scope/lifetime/struct.md","scope/lifetime/trait.md","scope/lifetime/lifetime_bounds.md","scope/lifetime/lifetime_coercion.md","scope/lifetime/static_lifetime.md","scope/lifetime/elision.md","trait.md","trait/derive.md","trait/dyn.md","trait/ops.md","trait/drop.md","trait/iter.md","trait/impl_trait.md","trait/clone.md","trait/supertraits.md","trait/disambiguating.md","macros.md","macros/syntax.md","macros/designators.md","macros/overload.md","macros/repeat.md","macros/dry.md","macros/dsl.md","macros/variadics.md","error.md","error/panic.md","error/option_unwrap.md","error/option_unwrap/question_mark.md","error/option_unwrap/map.md","error/option_unwrap/and_then.md","error/result.md","error/result/result_map.md","error/result/result_alias.md","error/result/early_returns.md","error/result/enter_question_mark.md","error/multiple_error_types.md","error/multiple_error_types/option_result.md","error/multiple_error_types/define_error_type.md","error/multiple_error_types/boxing_errors.md","error/multiple_error_types/reenter_question_mark.md","error/multiple_error_types/wrap_error.md","error/iter_result.md","std.md","std/box.md","std/vec.md","std/str.md","std/option.md","std/result.md","std/result/question_mark.md","std/panic.md","std/hash.md","std/hash/alt_key_types.md","std/hash/hashset.md","std/rc.md","std/arc.md","std_misc.md","std_misc/threads.md","std_misc/threads/testcase_mapreduce.md","std_misc/channels.md","std_misc/path.md","std_misc/file.md","std_misc/file/open.md","std_misc/file/create.md","std_misc/file/read_lines.md","std_misc/process.md","std_misc/process/pipe.md","std_misc/process/wait.md","std_misc/fs.md","std_misc/arg.md","std_misc/arg/matching.md","std_misc/ffi.md","testing.md","testing/unit_testing.md","testing/doc_testing.md","testing/integration_testing.md","testing/dev_dependencies.md","unsafe.md","compatibility.md","compatibility/raw_identifiers.md","meta.md","meta/doc.md","meta/playpen.md"],"backlink":[]}},{"id":"index.md","value":{"title":"index","path":"index.md","outlink":[],"backlink":[]}},{"id":"hello.md","value":{"title":"hello","path":"hello.md","outlink":[],"backlink":[]}},{"id":"hello/comment.md","value":{"title":"comment","path":"hello/comment.md","outlink":[],"backlink":[]}},{"id":"hello/print.md","value":{"title":"print","path":"hello/print.md","outlink":[],"backlink":[]}},{"id":"hello/print/print_debug.md","value":{"title":"print_debug","path":"hello/print/print_debug.md","outlink":[],"backlink":[]}},{"id":"hello/print/print_display.md","value":{"title":"print_display","path":"hello/print/print_display.md","outlink":[],"backlink":[]}},{"id":"hello/print/print_display/testcase_list.md","value":{"title":"testcase_list","path":"hello/print/print_display/testcase_list.md","outlink":[],"backlink":[]}},{"id":"hello/print/fmt.md","value":{"title":"fmt","path":"hello/print/fmt.md","outlink":[],"backlink":[]}},{"id":"primitives.md","value":{"title":"primitives","path":"primitives.md","outlink":[],"backlink":[]}},{"id":"primitives/literals.md","value":{"title":"literals","path":"primitives/literals.md","outlink":[],"backlink":[]}},{"id":"primitives/tuples.md","value":{"title":"tuples","path":"primitives/tuples.md","outlink":[],"backlink":[]}},{"id":"primitives/array.md","value":{"title":"array","path":"primitives/array.md","outlink":[],"backlink":[]}},{"id":"custom_types.md","value":{"title":"custom_types","path":"custom_types.md","outlink":[],"backlink":[]}},{"id":"custom_types/structs.md","value":{"title":"structs","path":"custom_types/structs.md","outlink":[],"backlink":[]}},{"id":"custom_types/enum.md","value":{"title":"enum","path":"custom_types/enum.md","outlink":[],"backlink":[]}},{"id":"custom_types/enum/enum_use.md","value":{"title":"enum_use","path":"custom_types/enum/enum_use.md","outlink":[],"backlink":[]}},{"id":"custom_types/enum/c_like.md","value":{"title":"c_like","path":"custom_types/enum/c_like.md","outlink":[],"backlink":[]}},{"id":"custom_types/enum/testcase_linked_list.md","value":{"title":"testcase_linked_list","path":"custom_types/enum/testcase_linked_list.md","outlink":[],"backlink":[]}},{"id":"custom_types/constants.md","value":{"title":"constants","path":"custom_types/constants.md","outlink":[],"backlink":[]}},{"id":"variable_bindings.md","value":{"title":"variable_bindings","path":"variable_bindings.md","outlink":[],"backlink":[]}},{"id":"variable_bindings/mut.md","value":{"title":"mut","path":"variable_bindings/mut.md","outlink":[],"backlink":[]}},{"id":"variable_bindings/scope.md","value":{"title":"scope","path":"variable_bindings/scope.md","outlink":[],"backlink":[]}},{"id":"variable_bindings/declare.md","value":{"title":"declare","path":"variable_bindings/declare.md","outlink":[],"backlink":[]}},{"id":"variable_bindings/freeze.md","value":{"title":"freeze","path":"variable_bindings/freeze.md","outlink":[],"backlink":[]}},{"id":"types.md","value":{"title":"types","path":"types.md","outlink":[],"backlink":[]}},{"id":"types/cast.md","value":{"title":"cast","path":"types/cast.md","outlink":[],"backlink":[]}},{"id":"types/literals.md","value":{"title":"literals","path":"types/literals.md","outlink":[],"backlink":[]}},{"id":"types/inference.md","value":{"title":"inference","path":"types/inference.md","outlink":[],"backlink":[]}},{"id":"types/alias.md","value":{"title":"alias","path":"types/alias.md","outlink":[],"backlink":[]}},{"id":"conversion.md","value":{"title":"conversion","path":"conversion.md","outlink":[],"backlink":[]}},{"id":"conversion/from_into.md","value":{"title":"from_into","path":"conversion/from_into.md","outlink":[],"backlink":[]}},{"id":"conversion/try_from_try_into.md","value":{"title":"try_from_try_into","path":"conversion/try_from_try_into.md","outlink":[],"backlink":[]}},{"id":"conversion/string.md","value":{"title":"string","path":"conversion/string.md","outlink":[],"backlink":[]}},{"id":"expression.md","value":{"title":"expression","path":"expression.md","outlink":[],"backlink":[]}},{"id":"flow_control.md","value":{"title":"flow_control","path":"flow_control.md","outlink":[],"backlink":[]}},{"id":"flow_control/if_else.md","value":{"title":"if_else","path":"flow_control/if_else.md","outlink":[],"backlink":[]}},{"id":"flow_control/loop.md","value":{"title":"loop","path":"flow_control/loop.md","outlink":[],"backlink":[]}},{"id":"flow_control/loop/nested.md","value":{"title":"nested","path":"flow_control/loop/nested.md","outlink":[],"backlink":[]}},{"id":"flow_control/loop/return.md","value":{"title":"return","path":"flow_control/loop/return.md","outlink":[],"backlink":[]}},{"id":"flow_control/while.md","value":{"title":"while","path":"flow_control/while.md","outlink":[],"backlink":[]}},{"id":"flow_control/for.md","value":{"title":"for","path":"flow_control/for.md","outlink":[],"backlink":[]}},{"id":"flow_control/match.md","value":{"title":"match","path":"flow_control/match.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring.md","value":{"title":"destructuring","path":"flow_control/match/destructuring.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring/destructure_tuple.md","value":{"title":"destructure_tuple","path":"flow_control/match/destructuring/destructure_tuple.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring/destructure_slice.md","value":{"title":"destructure_slice","path":"flow_control/match/destructuring/destructure_slice.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring/destructure_enum.md","value":{"title":"destructure_enum","path":"flow_control/match/destructuring/destructure_enum.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring/destructure_pointers.md","value":{"title":"destructure_pointers","path":"flow_control/match/destructuring/destructure_pointers.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/destructuring/destructure_structures.md","value":{"title":"destructure_structures","path":"flow_control/match/destructuring/destructure_structures.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/guard.md","value":{"title":"guard","path":"flow_control/match/guard.md","outlink":[],"backlink":[]}},{"id":"flow_control/match/binding.md","value":{"title":"binding","path":"flow_control/match/binding.md","outlink":[],"backlink":[]}},{"id":"flow_control/if_let.md","value":{"title":"if_let","path":"flow_control/if_let.md","outlink":[],"backlink":[]}},{"id":"flow_control/while_let.md","value":{"title":"while_let","path":"flow_control/while_let.md","outlink":[],"backlink":[]}},{"id":"fn.md","value":{"title":"fn","path":"fn.md","outlink":[],"backlink":[]}},{"id":"fn/methods.md","value":{"title":"methods","path":"fn/methods.md","outlink":[],"backlink":[]}},{"id":"fn/closures.md","value":{"title":"closures","path":"fn/closures.md","outlink":[],"backlink":[]}},{"id":"fn/closures/capture.md","value":{"title":"capture","path":"fn/closures/capture.md","outlink":[],"backlink":[]}},{"id":"fn/closures/input_parameters.md","value":{"title":"input_parameters","path":"fn/closures/input_parameters.md","outlink":[],"backlink":[]}},{"id":"fn/closures/anonymity.md","value":{"title":"anonymity","path":"fn/closures/anonymity.md","outlink":[],"backlink":[]}},{"id":"fn/closures/input_functions.md","value":{"title":"input_functions","path":"fn/closures/input_functions.md","outlink":[],"backlink":[]}},{"id":"fn/closures/output_parameters.md","value":{"title":"output_parameters","path":"fn/closures/output_parameters.md","outlink":[],"backlink":[]}},{"id":"fn/closures/closure_examples.md","value":{"title":"closure_examples","path":"fn/closures/closure_examples.md","outlink":[],"backlink":[]}},{"id":"fn/closures/closure_examples/iter_any.md","value":{"title":"iter_any","path":"fn/closures/closure_examples/iter_any.md","outlink":[],"backlink":[]}},{"id":"fn/closures/closure_examples/iter_find.md","value":{"title":"iter_find","path":"fn/closures/closure_examples/iter_find.md","outlink":[],"backlink":[]}},{"id":"fn/hof.md","value":{"title":"hof","path":"fn/hof.md","outlink":[],"backlink":[]}},{"id":"fn/diverging.md","value":{"title":"diverging","path":"fn/diverging.md","outlink":[],"backlink":[]}},{"id":"mod.md","value":{"title":"mod","path":"mod.md","outlink":[],"backlink":[]}},{"id":"mod/visibility.md","value":{"title":"visibility","path":"mod/visibility.md","outlink":[],"backlink":[]}},{"id":"mod/struct_visibility.md","value":{"title":"struct_visibility","path":"mod/struct_visibility.md","outlink":[],"backlink":[]}},{"id":"mod/use.md","value":{"title":"use","path":"mod/use.md","outlink":[],"backlink":[]}},{"id":"mod/super.md","value":{"title":"super","path":"mod/super.md","outlink":[],"backlink":[]}},{"id":"mod/split.md","value":{"title":"split","path":"mod/split.md","outlink":[],"backlink":[]}},{"id":"crates.md","value":{"title":"crates","path":"crates.md","outlink":[],"backlink":[]}},{"id":"crates/lib.md","value":{"title":"lib","path":"crates/lib.md","outlink":[],"backlink":[]}},{"id":"crates/using_lib.md","value":{"title":"using_lib","path":"crates/using_lib.md","outlink":[],"backlink":[]}},{"id":"cargo.md","value":{"title":"cargo","path":"cargo.md","outlink":[],"backlink":[]}},{"id":"cargo/deps.md","value":{"title":"deps","path":"cargo/deps.md","outlink":[],"backlink":[]}},{"id":"cargo/conventions.md","value":{"title":"conventions","path":"cargo/conventions.md","outlink":[],"backlink":[]}},{"id":"cargo/test.md","value":{"title":"test","path":"cargo/test.md","outlink":[],"backlink":[]}},{"id":"cargo/build_scripts.md","value":{"title":"build_scripts","path":"cargo/build_scripts.md","outlink":[],"backlink":[]}},{"id":"attribute.md","value":{"title":"attribute","path":"attribute.md","outlink":[],"backlink":[]}},{"id":"attribute/unused.md","value":{"title":"unused","path":"attribute/unused.md","outlink":[],"backlink":[]}},{"id":"attribute/crate.md","value":{"title":"crate","path":"attribute/crate.md","outlink":[],"backlink":[]}},{"id":"attribute/cfg.md","value":{"title":"cfg","path":"attribute/cfg.md","outlink":[],"backlink":[]}},{"id":"attribute/cfg/custom.md","value":{"title":"custom","path":"attribute/cfg/custom.md","outlink":[],"backlink":[]}},{"id":"generics.md","value":{"title":"generics","path":"generics.md","outlink":[],"backlink":[]}},{"id":"generics/gen_fn.md","value":{"title":"gen_fn","path":"generics/gen_fn.md","outlink":[],"backlink":[]}},{"id":"generics/impl.md","value":{"title":"impl","path":"generics/impl.md","outlink":[],"backlink":[]}},{"id":"generics/gen_trait.md","value":{"title":"gen_trait","path":"generics/gen_trait.md","outlink":[],"backlink":[]}},{"id":"generics/bounds.md","value":{"title":"bounds","path":"generics/bounds.md","outlink":[],"backlink":[]}},{"id":"generics/bounds/testcase_empty.md","value":{"title":"testcase_empty","path":"generics/bounds/testcase_empty.md","outlink":[],"backlink":[]}},{"id":"generics/multi_bounds.md","value":{"title":"multi_bounds","path":"generics/multi_bounds.md","outlink":[],"backlink":[]}},{"id":"generics/where.md","value":{"title":"where","path":"generics/where.md","outlink":[],"backlink":[]}},{"id":"generics/new_types.md","value":{"title":"new_types","path":"generics/new_types.md","outlink":[],"backlink":[]}},{"id":"generics/assoc_items.md","value":{"title":"assoc_items","path":"generics/assoc_items.md","outlink":[],"backlink":[]}},{"id":"generics/assoc_items/the_problem.md","value":{"title":"the_problem","path":"generics/assoc_items/the_problem.md","outlink":[],"backlink":[]}},{"id":"generics/assoc_items/types.md","value":{"title":"types","path":"generics/assoc_items/types.md","outlink":[],"backlink":[]}},{"id":"generics/phantom.md","value":{"title":"phantom","path":"generics/phantom.md","outlink":[],"backlink":[]}},{"id":"generics/phantom/testcase_units.md","value":{"title":"testcase_units","path":"generics/phantom/testcase_units.md","outlink":[],"backlink":[]}},{"id":"scope.md","value":{"title":"scope","path":"scope.md","outlink":[],"backlink":[]}},{"id":"scope/raii.md","value":{"title":"raii","path":"scope/raii.md","outlink":[],"backlink":[]}},{"id":"scope/move.md","value":{"title":"move","path":"scope/move.md","outlink":[],"backlink":[]}},{"id":"scope/move/mut.md","value":{"title":"mut","path":"scope/move/mut.md","outlink":[],"backlink":[]}},{"id":"scope/move/partial_move.md","value":{"title":"partial_move","path":"scope/move/partial_move.md","outlink":[],"backlink":[]}},{"id":"scope/borrow.md","value":{"title":"borrow","path":"scope/borrow.md","outlink":[],"backlink":[]}},{"id":"scope/borrow/mut.md","value":{"title":"mut","path":"scope/borrow/mut.md","outlink":[],"backlink":[]}},{"id":"scope/borrow/alias.md","value":{"title":"alias","path":"scope/borrow/alias.md","outlink":[],"backlink":[]}},{"id":"scope/borrow/ref.md","value":{"title":"ref","path":"scope/borrow/ref.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime.md","value":{"title":"lifetime","path":"scope/lifetime.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/explicit.md","value":{"title":"explicit","path":"scope/lifetime/explicit.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/fn.md","value":{"title":"fn","path":"scope/lifetime/fn.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/methods.md","value":{"title":"methods","path":"scope/lifetime/methods.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/struct.md","value":{"title":"struct","path":"scope/lifetime/struct.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/trait.md","value":{"title":"trait","path":"scope/lifetime/trait.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/lifetime_bounds.md","value":{"title":"lifetime_bounds","path":"scope/lifetime/lifetime_bounds.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/lifetime_coercion.md","value":{"title":"lifetime_coercion","path":"scope/lifetime/lifetime_coercion.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/static_lifetime.md","value":{"title":"static_lifetime","path":"scope/lifetime/static_lifetime.md","outlink":[],"backlink":[]}},{"id":"scope/lifetime/elision.md","value":{"title":"elision","path":"scope/lifetime/elision.md","outlink":[],"backlink":[]}},{"id":"trait.md","value":{"title":"trait","path":"trait.md","outlink":[],"backlink":[]}},{"id":"trait/derive.md","value":{"title":"derive","path":"trait/derive.md","outlink":[],"backlink":[]}},{"id":"trait/dyn.md","value":{"title":"dyn","path":"trait/dyn.md","outlink":[],"backlink":[]}},{"id":"trait/ops.md","value":{"title":"ops","path":"trait/ops.md","outlink":[],"backlink":[]}},{"id":"trait/drop.md","value":{"title":"drop","path":"trait/drop.md","outlink":[],"backlink":[]}},{"id":"trait/iter.md","value":{"title":"iter","path":"trait/iter.md","outlink":[],"backlink":[]}},{"id":"trait/impl_trait.md","value":{"title":"impl_trait","path":"trait/impl_trait.md","outlink":[],"backlink":[]}},{"id":"trait/clone.md","value":{"title":"clone","path":"trait/clone.md","outlink":[],"backlink":[]}},{"id":"trait/supertraits.md","value":{"title":"supertraits","path":"trait/supertraits.md","outlink":[],"backlink":[]}},{"id":"trait/disambiguating.md","value":{"title":"disambiguating","path":"trait/disambiguating.md","outlink":[],"backlink":[]}},{"id":"macros.md","value":{"title":"macros","path":"macros.md","outlink":[],"backlink":[]}},{"id":"macros/syntax.md","value":{"title":"syntax","path":"macros/syntax.md","outlink":[],"backlink":[]}},{"id":"macros/designators.md","value":{"title":"designators","path":"macros/designators.md","outlink":[],"backlink":[]}},{"id":"macros/overload.md","value":{"title":"overload","path":"macros/overload.md","outlink":[],"backlink":[]}},{"id":"macros/repeat.md","value":{"title":"repeat","path":"macros/repeat.md","outlink":[],"backlink":[]}},{"id":"macros/dry.md","value":{"title":"dry","path":"macros/dry.md","outlink":[],"backlink":[]}},{"id":"macros/dsl.md","value":{"title":"dsl","path":"macros/dsl.md","outlink":[],"backlink":[]}},{"id":"macros/variadics.md","value":{"title":"variadics","path":"macros/variadics.md","outlink":[],"backlink":[]}},{"id":"error.md","value":{"title":"error","path":"error.md","outlink":[],"backlink":[]}},{"id":"error/panic.md","value":{"title":"panic","path":"error/panic.md","outlink":[],"backlink":[]}},{"id":"error/option_unwrap.md","value":{"title":"option_unwrap","path":"error/option_unwrap.md","outlink":[],"backlink":[]}},{"id":"error/option_unwrap/question_mark.md","value":{"title":"question_mark","path":"error/option_unwrap/question_mark.md","outlink":[],"backlink":[]}},{"id":"error/option_unwrap/map.md","value":{"title":"map","path":"error/option_unwrap/map.md","outlink":[],"backlink":[]}},{"id":"error/option_unwrap/and_then.md","value":{"title":"and_then","path":"error/option_unwrap/and_then.md","outlink":[],"backlink":[]}},{"id":"error/result.md","value":{"title":"result","path":"error/result.md","outlink":[],"backlink":[]}},{"id":"error/result/result_map.md","value":{"title":"result_map","path":"error/result/result_map.md","outlink":[],"backlink":[]}},{"id":"error/result/result_alias.md","value":{"title":"result_alias","path":"error/result/result_alias.md","outlink":[],"backlink":[]}},{"id":"error/result/early_returns.md","value":{"title":"early_returns","path":"error/result/early_returns.md","outlink":[],"backlink":[]}},{"id":"error/result/enter_question_mark.md","value":{"title":"enter_question_mark","path":"error/result/enter_question_mark.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types.md","value":{"title":"multiple_error_types","path":"error/multiple_error_types.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types/option_result.md","value":{"title":"option_result","path":"error/multiple_error_types/option_result.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types/define_error_type.md","value":{"title":"define_error_type","path":"error/multiple_error_types/define_error_type.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types/boxing_errors.md","value":{"title":"boxing_errors","path":"error/multiple_error_types/boxing_errors.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types/reenter_question_mark.md","value":{"title":"reenter_question_mark","path":"error/multiple_error_types/reenter_question_mark.md","outlink":[],"backlink":[]}},{"id":"error/multiple_error_types/wrap_error.md","value":{"title":"wrap_error","path":"error/multiple_error_types/wrap_error.md","outlink":[],"backlink":[]}},{"id":"error/iter_result.md","value":{"title":"iter_result","path":"error/iter_result.md","outlink":[],"backlink":[]}},{"id":"std.md","value":{"title":"std","path":"std.md","outlink":[],"backlink":[]}},{"id":"std/box.md","value":{"title":"box","path":"std/box.md","outlink":[],"backlink":[]}},{"id":"std/vec.md","value":{"title":"vec","path":"std/vec.md","outlink":[],"backlink":[]}},{"id":"std/str.md","value":{"title":"str","path":"std/str.md","outlink":[],"backlink":[]}},{"id":"std/option.md","value":{"title":"option","path":"std/option.md","outlink":[],"backlink":[]}},{"id":"std/result.md","value":{"title":"result","path":"std/result.md","outlink":[],"backlink":[]}},{"id":"std/result/question_mark.md","value":{"title":"question_mark","path":"std/result/question_mark.md","outlink":[],"backlink":[]}},{"id":"std/panic.md","value":{"title":"panic","path":"std/panic.md","outlink":[],"backlink":[]}},{"id":"std/hash.md","value":{"title":"hash","path":"std/hash.md","outlink":[],"backlink":[]}},{"id":"std/hash/alt_key_types.md","value":{"title":"alt_key_types","path":"std/hash/alt_key_types.md","outlink":[],"backlink":[]}},{"id":"std/hash/hashset.md","value":{"title":"hashset","path":"std/hash/hashset.md","outlink":[],"backlink":[]}},{"id":"std/rc.md","value":{"title":"rc","path":"std/rc.md","outlink":[],"backlink":[]}},{"id":"std/arc.md","value":{"title":"arc","path":"std/arc.md","outlink":[],"backlink":[]}},{"id":"std_misc.md","value":{"title":"std_misc","path":"std_misc.md","outlink":[],"backlink":[]}},{"id":"std_misc/threads.md","value":{"title":"threads","path":"std_misc/threads.md","outlink":[],"backlink":[]}},{"id":"std_misc/threads/testcase_mapreduce.md","value":{"title":"testcase_mapreduce","path":"std_misc/threads/testcase_mapreduce.md","outlink":[],"backlink":[]}},{"id":"std_misc/channels.md","value":{"title":"channels","path":"std_misc/channels.md","outlink":[],"backlink":[]}},{"id":"std_misc/path.md","value":{"title":"path","path":"std_misc/path.md","outlink":[],"backlink":[]}},{"id":"std_misc/file.md","value":{"title":"file","path":"std_misc/file.md","outlink":[],"backlink":[]}},{"id":"std_misc/file/open.md","value":{"title":"open","path":"std_misc/file/open.md","outlink":[],"backlink":[]}},{"id":"std_misc/file/create.md","value":{"title":"create","path":"std_misc/file/create.md","outlink":[],"backlink":[]}},{"id":"std_misc/file/read_lines.md","value":{"title":"read_lines","path":"std_misc/file/read_lines.md","outlink":[],"backlink":[]}},{"id":"std_misc/process.md","value":{"title":"process","path":"std_misc/process.md","outlink":[],"backlink":[]}},{"id":"std_misc/process/pipe.md","value":{"title":"pipe","path":"std_misc/process/pipe.md","outlink":[],"backlink":[]}},{"id":"std_misc/process/wait.md","value":{"title":"wait","path":"std_misc/process/wait.md","outlink":[],"backlink":[]}},{"id":"std_misc/fs.md","value":{"title":"fs","path":"std_misc/fs.md","outlink":[],"backlink":[]}},{"id":"std_misc/arg.md","value":{"title":"arg","path":"std_misc/arg.md","outlink":[],"backlink":[]}},{"id":"std_misc/arg/matching.md","value":{"title":"matching","path":"std_misc/arg/matching.md","outlink":[],"backlink":[]}},{"id":"std_misc/ffi.md","value":{"title":"ffi","path":"std_misc/ffi.md","outlink":[],"backlink":[]}},{"id":"testing.md","value":{"title":"testing","path":"testing.md","outlink":[],"backlink":[]}},{"id":"testing/unit_testing.md","value":{"title":"unit_testing","path":"testing/unit_testing.md","outlink":[],"backlink":[]}},{"id":"testing/doc_testing.md","value":{"title":"doc_testing","path":"testing/doc_testing.md","outlink":[],"backlink":[]}},{"id":"testing/integration_testing.md","value":{"title":"integration_testing","path":"testing/integration_testing.md","outlink":[],"backlink":[]}},{"id":"testing/dev_dependencies.md","value":{"title":"dev_dependencies","path":"testing/dev_dependencies.md","outlink":[],"backlink":[]}},{"id":"unsafe.md","value":{"title":"unsafe","path":"unsafe.md","outlink":[],"backlink":[]}},{"id":"compatibility.md","value":{"title":"compatibility","path":"compatibility.md","outlink":[],"backlink":[]}},{"id":"compatibility/raw_identifiers.md","value":{"title":"raw_identifiers","path":"compatibility/raw_identifiers.md","outlink":[],"backlink":[]}},{"id":"meta.md","value":{"title":"meta","path":"meta.md","outlink":[],"backlink":[]}},{"id":"meta/doc.md","value":{"title":"doc","path":"meta/doc.md","outlink":[],"backlink":[]}},{"id":"meta/playpen.md","value":{"title":"playpen","path":"meta/playpen.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"index.md"},{"source":"SUMMARY.md","target":"hello.md"},{"source":"SUMMARY.md","target":"hello/comment.md"},{"source":"SUMMARY.md","target":"hello/print.md"},{"source":"SUMMARY.md","target":"hello/print/print_debug.md"},{"source":"SUMMARY.md","target":"hello/print/print_display.md"},{"source":"SUMMARY.md","target":"hello/print/print_display/testcase_list.md"},{"source":"SUMMARY.md","target":"hello/print/fmt.md"},{"source":"SUMMARY.md","target":"primitives.md"},{"source":"SUMMARY.md","target":"primitives/literals.md"},{"source":"SUMMARY.md","target":"primitives/tuples.md"},{"source":"SUMMARY.md","target":"primitives/array.md"},{"source":"SUMMARY.md","target":"custom_types.md"},{"source":"SUMMARY.md","target":"custom_types/structs.md"},{"source":"SUMMARY.md","target":"custom_types/enum.md"},{"source":"SUMMARY.md","target":"custom_types/enum/enum_use.md"},{"source":"SUMMARY.md","target":"custom_types/enum/c_like.md"},{"source":"SUMMARY.md","target":"custom_types/enum/testcase_linked_list.md"},{"source":"SUMMARY.md","target":"custom_types/constants.md"},{"source":"SUMMARY.md","target":"variable_bindings.md"},{"source":"SUMMARY.md","target":"variable_bindings/mut.md"},{"source":"SUMMARY.md","target":"variable_bindings/scope.md"},{"source":"SUMMARY.md","target":"variable_bindings/declare.md"},{"source":"SUMMARY.md","target":"variable_bindings/freeze.md"},{"source":"SUMMARY.md","target":"types.md"},{"source":"SUMMARY.md","target":"types/cast.md"},{"source":"SUMMARY.md","target":"types/literals.md"},{"source":"SUMMARY.md","target":"types/inference.md"},{"source":"SUMMARY.md","target":"types/alias.md"},{"source":"SUMMARY.md","target":"conversion.md"},{"source":"SUMMARY.md","target":"conversion/from_into.md"},{"source":"SUMMARY.md","target":"conversion/try_from_try_into.md"},{"source":"SUMMARY.md","target":"conversion/string.md"},{"source":"SUMMARY.md","target":"expression.md"},{"source":"SUMMARY.md","target":"flow_control.md"},{"source":"SUMMARY.md","target":"flow_control/if_else.md"},{"source":"SUMMARY.md","target":"flow_control/loop.md"},{"source":"SUMMARY.md","target":"flow_control/loop/nested.md"},{"source":"SUMMARY.md","target":"flow_control/loop/return.md"},{"source":"SUMMARY.md","target":"flow_control/while.md"},{"source":"SUMMARY.md","target":"flow_control/for.md"},{"source":"SUMMARY.md","target":"flow_control/match.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_tuple.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_slice.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_enum.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_pointers.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_structures.md"},{"source":"SUMMARY.md","target":"flow_control/match/guard.md"},{"source":"SUMMARY.md","target":"flow_control/match/binding.md"},{"source":"SUMMARY.md","target":"flow_control/if_let.md"},{"source":"SUMMARY.md","target":"flow_control/while_let.md"},{"source":"SUMMARY.md","target":"fn.md"},{"source":"SUMMARY.md","target":"fn/methods.md"},{"source":"SUMMARY.md","target":"fn/closures.md"},{"source":"SUMMARY.md","target":"fn/closures/capture.md"},{"source":"SUMMARY.md","target":"fn/closures/input_parameters.md"},{"source":"SUMMARY.md","target":"fn/closures/anonymity.md"},{"source":"SUMMARY.md","target":"fn/closures/input_functions.md"},{"source":"SUMMARY.md","target":"fn/closures/output_parameters.md"},{"source":"SUMMARY.md","target":"fn/closures/closure_examples.md"},{"source":"SUMMARY.md","target":"fn/closures/closure_examples/iter_any.md"},{"source":"SUMMARY.md","target":"fn/closures/closure_examples/iter_find.md"},{"source":"SUMMARY.md","target":"fn/hof.md"},{"source":"SUMMARY.md","target":"fn/diverging.md"},{"source":"SUMMARY.md","target":"mod.md"},{"source":"SUMMARY.md","target":"mod/visibility.md"},{"source":"SUMMARY.md","target":"mod/struct_visibility.md"},{"source":"SUMMARY.md","target":"mod/use.md"},{"source":"SUMMARY.md","target":"mod/super.md"},{"source":"SUMMARY.md","target":"mod/split.md"},{"source":"SUMMARY.md","target":"crates.md"},{"source":"SUMMARY.md","target":"crates/lib.md"},{"source":"SUMMARY.md","target":"crates/using_lib.md"},{"source":"SUMMARY.md","target":"cargo.md"},{"source":"SUMMARY.md","target":"cargo/deps.md"},{"source":"SUMMARY.md","target":"cargo/conventions.md"},{"source":"SUMMARY.md","target":"cargo/test.md"},{"source":"SUMMARY.md","target":"cargo/build_scripts.md"},{"source":"SUMMARY.md","target":"attribute.md"},{"source":"SUMMARY.md","target":"attribute/unused.md"},{"source":"SUMMARY.md","target":"attribute/crate.md"},{"source":"SUMMARY.md","target":"attribute/cfg.md"},{"source":"SUMMARY.md","target":"attribute/cfg/custom.md"},{"source":"SUMMARY.md","target":"generics.md"},{"source":"SUMMARY.md","target":"generics/gen_fn.md"},{"source":"SUMMARY.md","target":"generics/impl.md"},{"source":"SUMMARY.md","target":"generics/gen_trait.md"},{"source":"SUMMARY.md","target":"generics/bounds.md"},{"source":"SUMMARY.md","target":"generics/bounds/testcase_empty.md"},{"source":"SUMMARY.md","target":"generics/multi_bounds.md"},{"source":"SUMMARY.md","target":"generics/where.md"},{"source":"SUMMARY.md","target":"generics/new_types.md"},{"source":"SUMMARY.md","target":"generics/assoc_items.md"},{"source":"SUMMARY.md","target":"generics/assoc_items/the_problem.md"},{"source":"SUMMARY.md","target":"generics/assoc_items/types.md"},{"source":"SUMMARY.md","target":"generics/phantom.md"},{"source":"SUMMARY.md","target":"generics/phantom/testcase_units.md"},{"source":"SUMMARY.md","target":"scope.md"},{"source":"SUMMARY.md","target":"scope/raii.md"},{"source":"SUMMARY.md","target":"scope/move.md"},{"source":"SUMMARY.md","target":"scope/move/mut.md"},{"source":"SUMMARY.md","target":"scope/move/partial_move.md"},{"source":"SUMMARY.md","target":"scope/borrow.md"},{"source":"SUMMARY.md","target":"scope/borrow/mut.md"},{"source":"SUMMARY.md","target":"scope/borrow/alias.md"},{"source":"SUMMARY.md","target":"scope/borrow/ref.md"},{"source":"SUMMARY.md","target":"scope/lifetime.md"},{"source":"SUMMARY.md","target":"scope/lifetime/explicit.md"},{"source":"SUMMARY.md","target":"scope/lifetime/fn.md"},{"source":"SUMMARY.md","target":"scope/lifetime/methods.md"},{"source":"SUMMARY.md","target":"scope/lifetime/struct.md"},{"source":"SUMMARY.md","target":"scope/lifetime/trait.md"},{"source":"SUMMARY.md","target":"scope/lifetime/lifetime_bounds.md"},{"source":"SUMMARY.md","target":"scope/lifetime/lifetime_coercion.md"},{"source":"SUMMARY.md","target":"scope/lifetime/static_lifetime.md"},{"source":"SUMMARY.md","target":"scope/lifetime/elision.md"},{"source":"SUMMARY.md","target":"trait.md"},{"source":"SUMMARY.md","target":"trait/derive.md"},{"source":"SUMMARY.md","target":"trait/dyn.md"},{"source":"SUMMARY.md","target":"trait/ops.md"},{"source":"SUMMARY.md","target":"trait/drop.md"},{"source":"SUMMARY.md","target":"trait/iter.md"},{"source":"SUMMARY.md","target":"trait/impl_trait.md"},{"source":"SUMMARY.md","target":"trait/clone.md"},{"source":"SUMMARY.md","target":"trait/supertraits.md"},{"source":"SUMMARY.md","target":"trait/disambiguating.md"},{"source":"SUMMARY.md","target":"macros.md"},{"source":"SUMMARY.md","target":"macros/syntax.md"},{"source":"SUMMARY.md","target":"macros/designators.md"},{"source":"SUMMARY.md","target":"macros/overload.md"},{"source":"SUMMARY.md","target":"macros/repeat.md"},{"source":"SUMMARY.md","target":"macros/dry.md"},{"source":"SUMMARY.md","target":"macros/dsl.md"},{"source":"SUMMARY.md","target":"macros/variadics.md"},{"source":"SUMMARY.md","target":"error.md"},{"source":"SUMMARY.md","target":"error/panic.md"},{"source":"SUMMARY.md","target":"error/option_unwrap.md"},{"source":"SUMMARY.md","target":"error/option_unwrap/question_mark.md"},{"source":"SUMMARY.md","target":"error/option_unwrap/map.md"},{"source":"SUMMARY.md","target":"error/option_unwrap/and_then.md"},{"source":"SUMMARY.md","target":"error/result.md"},{"source":"SUMMARY.md","target":"error/result/result_map.md"},{"source":"SUMMARY.md","target":"error/result/result_alias.md"},{"source":"SUMMARY.md","target":"error/result/early_returns.md"},{"source":"SUMMARY.md","target":"error/result/enter_question_mark.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types/option_result.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types/define_error_type.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types/boxing_errors.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types/reenter_question_mark.md"},{"source":"SUMMARY.md","target":"error/multiple_error_types/wrap_error.md"},{"source":"SUMMARY.md","target":"error/iter_result.md"},{"source":"SUMMARY.md","target":"std.md"},{"source":"SUMMARY.md","target":"std/box.md"},{"source":"SUMMARY.md","target":"std/vec.md"},{"source":"SUMMARY.md","target":"std/str.md"},{"source":"SUMMARY.md","target":"std/option.md"},{"source":"SUMMARY.md","target":"std/result.md"},{"source":"SUMMARY.md","target":"std/result/question_mark.md"},{"source":"SUMMARY.md","target":"std/panic.md"},{"source":"SUMMARY.md","target":"std/hash.md"},{"source":"SUMMARY.md","target":"std/hash/alt_key_types.md"},{"source":"SUMMARY.md","target":"std/hash/hashset.md"},{"source":"SUMMARY.md","target":"std/rc.md"},{"source":"SUMMARY.md","target":"std/arc.md"},{"source":"SUMMARY.md","target":"std_misc.md"},{"source":"SUMMARY.md","target":"std_misc/threads.md"},{"source":"SUMMARY.md","target":"std_misc/threads/testcase_mapreduce.md"},{"source":"SUMMARY.md","target":"std_misc/channels.md"},{"source":"SUMMARY.md","target":"std_misc/path.md"},{"source":"SUMMARY.md","target":"std_misc/file.md"},{"source":"SUMMARY.md","target":"std_misc/file/open.md"},{"source":"SUMMARY.md","target":"std_misc/file/create.md"},{"source":"SUMMARY.md","target":"std_misc/file/read_lines.md"},{"source":"SUMMARY.md","target":"std_misc/process.md"},{"source":"SUMMARY.md","target":"std_misc/process/pipe.md"},{"source":"SUMMARY.md","target":"std_misc/process/wait.md"},{"source":"SUMMARY.md","target":"std_misc/fs.md"},{"source":"SUMMARY.md","target":"std_misc/arg.md"},{"source":"SUMMARY.md","target":"std_misc/arg/matching.md"},{"source":"SUMMARY.md","target":"std_misc/ffi.md"},{"source":"SUMMARY.md","target":"testing.md"},{"source":"SUMMARY.md","target":"testing/unit_testing.md"},{"source":"SUMMARY.md","target":"testing/doc_testing.md"},{"source":"SUMMARY.md","target":"testing/integration_testing.md"},{"source":"SUMMARY.md","target":"testing/dev_dependencies.md"},{"source":"SUMMARY.md","target":"unsafe.md"},{"source":"SUMMARY.md","target":"compatibility.md"},{"source":"SUMMARY.md","target":"compatibility/raw_identifiers.md"},{"source":"SUMMARY.md","target":"meta.md"},{"source":"SUMMARY.md","target":"meta/doc.md"},{"source":"SUMMARY.md","target":"meta/playpen.md"}]}}}');export{_ as comp,k as data};
