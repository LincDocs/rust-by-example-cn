import{_ as i,e as a,k as n,o as e}from"./app-CVSWwIkE.js";const l={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="创建文件-create" tabindex="-1"><a class="header-anchor" href="#创建文件-create"><span>创建文件 <code>create</code></span></a></h1><p><code>create</code> 静态方法以只写模式（write-only mode）打开一个文件。若文件已经存在，则旧内容将被销毁。否则，将创建一个新文件。</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>static LOREM_IPSUM: &amp;&#39;static str =</span></span>
<span class="line"><span>&quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod</span></span>
<span class="line"><span>tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,</span></span>
<span class="line"><span>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo</span></span>
<span class="line"><span>consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse</span></span>
<span class="line"><span>cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non</span></span>
<span class="line"><span>proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span>
<span class="line"><span>&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>use std::io::prelude::*;</span></span>
<span class="line"><span>use std::fs::File;</span></span>
<span class="line"><span>use std::path::Path;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    let path = Path::new(&quot;out/lorem_ipsum.txt&quot;);</span></span>
<span class="line"><span>    let display = path.display();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 以只写模式打开文件，返回 \`io::Result&lt;File&gt;\`</span></span>
<span class="line"><span>    let mut file = match File::create(&amp;path) {</span></span>
<span class="line"><span>        Err(why) =&gt; panic!(&quot;couldn&#39;t create {}: {:?}&quot;, display, why),</span></span>
<span class="line"><span>        Ok(file) =&gt; file,</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 将 \`LOREM_IPSUM\` 字符串写进 \`file\`，返回 \`io::Result&lt;()&gt;\`</span></span>
<span class="line"><span>    match file.write_all(LOREM_IPSUM.as_bytes()) {</span></span>
<span class="line"><span>        Err(why) =&gt; {</span></span>
<span class="line"><span>            panic!(&quot;couldn&#39;t write to {}: {:?}&quot;, display, why)</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        Ok(_) =&gt; println!(&quot;successfully wrote to {}&quot;, display),</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是预期成功的输出：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create.rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./create</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">successfully</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wrote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out/lorem_ipsum.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out/lorem_ipsum.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Lorem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ipsum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dolor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> amet,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> consectetur</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adipisicing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elit,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> do</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eiusmod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tempor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> incididunt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ut</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> labore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> et</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dolore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> magna</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aliqua.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ut</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ad</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> veniam,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">quis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nostrud</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exercitation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ullamco</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> laboris</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nisi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ut</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aliquip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ea</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commodo</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">consequat.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Duis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aute</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> irure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dolor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reprehenderit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> voluptate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> velit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> esse</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cillum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dolore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fugiat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nulla</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pariatur.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Excepteur</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> occaecat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cupidatat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> non</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">proident,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sunt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> culpa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qui</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> officia</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deserunt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mollit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> anim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> est</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> laborum.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（和前面例子一样，我们鼓励你在失败条件下测试这个例子。）</p><p>还有一个更通用的 <code>open_mode</code> 方法，这能够以其他方式来来打开文件，如：read+write（读 + 写），追加（append），等等。</p>`,7)]))}const r=i(l,[["render",p],["__file","create.html.vue"]]),h=JSON.parse('{"path":"/std_misc/file/create.html","title":"创建文件 create","lang":"zh-CN","frontmatter":{"description":"创建文件 create create 静态方法以只写模式（write-only mode）打开一个文件。若文件已经存在，则旧内容将被销毁。否则，将创建一个新文件。 下面是预期成功的输出： （和前面例子一样，我们鼓励你在失败条件下测试这个例子。） 还有一个更通用的 open_mode 方法，这能够以其他方式来来打开文件，如：read+write（读 + ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/std_misc/file/create.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"创建文件 create"}],["meta",{"property":"og:description","content":"创建文件 create create 静态方法以只写模式（write-only mode）打开一个文件。若文件已经存在，则旧内容将被销毁。否则，将创建一个新文件。 下面是预期成功的输出： （和前面例子一样，我们鼓励你在失败条件下测试这个例子。） 还有一个更通用的 open_mode 方法，这能够以其他方式来来打开文件，如：read+write（读 + ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建文件 create\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"std_misc/file/create.md","excerpt":"\\n<p><code>create</code> 静态方法以只写模式（write-only mode）打开一个文件。若文件已经存在，则旧内容将被销毁。否则，将创建一个新文件。</p>\\n<div class=\\"language-rust,ignore line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,ignore\\" data-title=\\"rust,ignore\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>static LOREM_IPSUM: &amp;\'static str =</span></span>\\n<span class=\\"line\\"><span>\\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod</span></span>\\n<span class=\\"line\\"><span>tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,</span></span>\\n<span class=\\"line\\"><span>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo</span></span>\\n<span class=\\"line\\"><span>consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse</span></span>\\n<span class=\\"line\\"><span>cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non</span></span>\\n<span class=\\"line\\"><span>proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span>\\n<span class=\\"line\\"><span>\\";</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>use std::io::prelude::*;</span></span>\\n<span class=\\"line\\"><span>use std::fs::File;</span></span>\\n<span class=\\"line\\"><span>use std::path::Path;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>fn main() {</span></span>\\n<span class=\\"line\\"><span>    let path = Path::new(\\"out/lorem_ipsum.txt\\");</span></span>\\n<span class=\\"line\\"><span>    let display = path.display();</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 以只写模式打开文件，返回 `io::Result&lt;File&gt;`</span></span>\\n<span class=\\"line\\"><span>    let mut file = match File::create(&amp;path) {</span></span>\\n<span class=\\"line\\"><span>        Err(why) =&gt; panic!(\\"couldn\'t create {}: {:?}\\", display, why),</span></span>\\n<span class=\\"line\\"><span>        Ok(file) =&gt; file,</span></span>\\n<span class=\\"line\\"><span>    };</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    // 将 `LOREM_IPSUM` 字符串写进 `file`，返回 `io::Result&lt;()&gt;`</span></span>\\n<span class=\\"line\\"><span>    match file.write_all(LOREM_IPSUM.as_bytes()) {</span></span>\\n<span class=\\"line\\"><span>        Err(why) =&gt; {</span></span>\\n<span class=\\"line\\"><span>            panic!(\\"couldn\'t write to {}: {:?}\\", display, why)</span></span>\\n<span class=\\"line\\"><span>        },</span></span>\\n<span class=\\"line\\"><span>        Ok(_) =&gt; println!(\\"successfully wrote to {}\\", display),</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"std_misc/file/create.md","value":{"title":"create","path":"std_misc/file/create.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"std_misc/file/create.md"}]}}}');export{r as comp,h as data};
