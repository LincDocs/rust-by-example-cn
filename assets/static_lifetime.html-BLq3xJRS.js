import{_ as a,e,k as i,f as n,g as l,h as c,r as p,o,i as d}from"./app-CVSWwIkE.js";const m={};function r(u,s){const t=p("RouteLink");return o(),e("div",null,[s[1]||(s[1]=i(`<h1 id="static" tabindex="-1"><a class="header-anchor" href="#static"><span>static</span></a></h1><p><code>&#39;static</code> 生命周期是可能的生命周期中最长的，它会在整个程序运行的时期中存在。<code>&#39;static</code> 生命周期也可被强制转换成一个更短的生命周期。有两种方式使变量拥有 <code>&#39;static</code> 生命周期，它们都把数据保存在可执行文件的只读内存区：</p><ul><li>使用 <code>static</code> 声明来产生常量（constant）。</li><li>产生一个拥有 <code>&amp;&#39;static str</code> 类型的 <code>string</code> 字面量。</li></ul><p>看下面的例子，了解列举到的各个方法：</p><div class="language-rust,editable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable" data-title="rust,editable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 产生一个拥有 \`&#39;static\` 生命周期的常量。</span></span>
<span class="line"><span>static NUM: i32 = 18;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 返回一个指向 \`NUM\` 的引用，该引用不取 \`NUM\` 的 \`&#39;static\` 生命周期，</span></span>
<span class="line"><span>// 而是被强制转换成和输入参数的一样。</span></span>
<span class="line"><span>fn coerce_static&lt;&#39;a&gt;(_: &amp;&#39;a i32) -&gt; &amp;&#39;a i32 {</span></span>
<span class="line"><span>    &amp;NUM</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        // 产生一个 \`string\` 字面量并打印它：</span></span>
<span class="line"><span>        let static_string = &quot;I&#39;m in read-only memory&quot;;</span></span>
<span class="line"><span>        println!(&quot;static_string: {}&quot;, static_string);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 当 \`static_string\` 离开作用域时，该引用不能再使用，不过</span></span>
<span class="line"><span>        // 数据仍然存在于二进制文件里面。</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        // 产生一个整型给 \`coerce_static\` 使用：</span></span>
<span class="line"><span>        let lifetime_num = 9;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 将对 \`NUM\` 的引用强制转换成 \`lifetime_num\` 的生命周期：</span></span>
<span class="line"><span>        let coerced_static = coerce_static(&amp;lifetime_num);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        println!(&quot;coerced_static: {}&quot;, coerced_static);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    println!(&quot;NUM: {} stays accessible!&quot;, NUM);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>`,6)),n("p",null,[l(t,{to:"/custom_types/constants.html"},{default:c(()=>s[0]||(s[0]=[n("code",null,"'static",-1),d(" 常量")])),_:1})])])}const b=a(m,[["render",r],["__file","static_lifetime.html.vue"]]),h=JSON.parse(`{"path":"/scope/lifetime/static_lifetime.html","title":"static","lang":"zh-CN","frontmatter":{"description":"static 'static 生命周期是可能的生命周期中最长的，它会在整个程序运行的时期中存在。'static 生命周期也可被强制转换成一个更短的生命周期。有两种方式使变量拥有 'static 生命周期，它们都把数据保存在可执行文件的只读内存区： 使用 static 声明来产生常量（constant）。 产生一个拥有 &'static str 类型的 ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/scope/lifetime/static_lifetime.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"static"}],["meta",{"property":"og:description","content":"static 'static 生命周期是可能的生命周期中最长的，它会在整个程序运行的时期中存在。'static 生命周期也可被强制转换成一个更短的生命周期。有两种方式使变量拥有 'static 生命周期，它们都把数据保存在可执行文件的只读内存区： 使用 static 声明来产生常量（constant）。 产生一个拥有 &'static str 类型的 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"static\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.05,"words":314},"filePathRelative":"scope/lifetime/static_lifetime.md","excerpt":"\\n<p><code>'static</code> 生命周期是可能的生命周期中最长的，它会在整个程序运行的时期中存在。<code>'static</code> 生命周期也可被强制转换成一个更短的生命周期。有两种方式使变量拥有 <code>'static</code> 生命周期，它们都把数据保存在可执行文件的只读内存区：</p>\\n<ul>\\n<li>使用 <code>static</code> 声明来产生常量（constant）。</li>\\n<li>产生一个拥有 <code>&amp;'static str</code> 类型的 <code>string</code> 字面量。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"constants","link":"custom_types/constants.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"},{"title":"constants","link":"custom_types/constants.html"},{"title":"mut","link":"scope/borrow/mut.html"}],"localMap":{"nodes":[{"id":"scope/lifetime/static_lifetime.md","value":{"title":"static_lifetime","path":"scope/lifetime/static_lifetime.md","outlink":["custom_types/constants.md"],"backlink":["SUMMARY.md","custom_types/constants.md","scope/borrow/mut.md"]}},{"id":"custom_types/constants.md","value":{"title":"constants","path":"custom_types/constants.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}},{"id":"scope/borrow/mut.md","value":{"title":"mut","path":"scope/borrow/mut.md","outlink":[],"backlink":[]}}],"links":[{"source":"scope/lifetime/static_lifetime.md","target":"custom_types/constants.md"},{"source":"SUMMARY.md","target":"scope/lifetime/static_lifetime.md"},{"source":"custom_types/constants.md","target":"scope/lifetime/static_lifetime.md"},{"source":"scope/borrow/mut.md","target":"scope/lifetime/static_lifetime.md"}]}}}`);export{b as comp,h as data};
