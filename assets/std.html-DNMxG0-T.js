import{_ as l,e as n,k as r,f as e,g as a,i as o,h as s,r as d,o as p}from"./app-CY03Lsxp.js";const c={};function m(h,t){const i=d("RouteLink");return p(),n("div",null,[t[3]||(t[3]=r('<h1 id="标准库类型" tabindex="-1"><a class="header-anchor" href="#标准库类型"><span>标准库类型</span></a></h1><p>标准库提供了很多自定义类型，在<strong>原生类型</strong>基础上进行了大量扩充。这是部分自定义类型：</p><ul><li>可增长的 <code>String</code>（字符串），如: <code>&quot;hello world&quot;</code></li><li>可增长的向量（vector）: <code>[1, 2, 3]</code></li><li>选项类型（optional types）: <code>Option&lt;i32&gt;</code></li><li>错误处理类型（error handling types）: <code>Result&lt;i32, i32&gt;</code></li><li>堆分配的指针（heap allocated pointers）: <code>Box&lt;i32&gt;</code></li></ul><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>',4)),e("p",null,[a(i,{to:"/primitives.html"},{default:s(()=>t[0]||(t[0]=[o("原生类型")])),_:1}),t[1]||(t[1]=o(" 和 ")),t[2]||(t[2]=e("a",{href:"https://rustwiki.org/zh-CN/std/",target:"_blank",rel:"noopener noreferrer"},"标准库",-1))])])}const g=l(c,[["render",m],["__file","std.html.vue"]]),k=JSON.parse('{"path":"/std.html","title":"标准库类型","lang":"zh-CN","frontmatter":{"description":"标准库类型 标准库提供了很多自定义类型，在原生类型基础上进行了大量扩充。这是部分自定义类型： 可增长的 String（字符串），如: \\"hello world\\" 可增长的向量（vector）: [1, 2, 3] 选项类型（optional types）: Option<i32> 错误处理类型（error handling types）: Result...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn/std.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn"}],["meta",{"property":"og:title","content":"标准库类型"}],["meta",{"property":"og:description","content":"标准库类型 标准库提供了很多自定义类型，在原生类型基础上进行了大量扩充。这是部分自定义类型： 可增长的 String（字符串），如: \\"hello world\\" 可增长的向量（vector）: [1, 2, 3] 选项类型（optional types）: Option<i32> 错误处理类型（error handling types）: Result..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"标准库类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.37,"words":112},"filePathRelative":"std.md","excerpt":"\\n<p>标准库提供了很多自定义类型，在<strong>原生类型</strong>基础上进行了大量扩充。这是部分自定义类型：</p>\\n<ul>\\n<li>可增长的 <code>String</code>（字符串），如: <code>\\"hello world\\"</code></li>\\n<li>可增长的向量（vector）: <code>[1, 2, 3]</code></li>\\n<li>选项类型（optional types）: <code>Option&lt;i32&gt;</code></li>\\n<li>错误处理类型（error handling types）: <code>Result&lt;i32, i32&gt;</code></li>\\n<li>堆分配的指针（heap allocated pointers）: <code>Box&lt;i32&gt;</code></li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"primitives","link":"primitives.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"std.md","value":{"title":"std","path":"std.md","outlink":["primitives.md"],"backlink":["SUMMARY.md"]}},{"id":"primitives.md","value":{"title":"primitives","path":"primitives.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"std.md","target":"primitives.md"},{"source":"SUMMARY.md","target":"std.md"}]}}}');export{g as comp,k as data};
