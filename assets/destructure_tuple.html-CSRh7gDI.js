import{_ as e,e as a,k as t,f as i,g as l,h as p,r,o as c,i as d}from"./app-CY03Lsxp.js";const u={};function o(m,s){const n=r("RouteLink");return c(),a("div",null,[s[1]||(s[1]=t('<h1 id="元组" tabindex="-1"><a class="header-anchor" href="#元组"><span>元组</span></a></h1><p>元组可以在 <code>match</code> 中解构，如下所示：</p><div class="language-rust,editable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable" data-title="rust,editable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fn main() {</span></span>\n<span class="line"><span>    let triple = (0, -2, 3);</span></span>\n<span class="line"><span>    // 试一试 ^ 将不同的值赋给 `triple`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    println!(&quot;Tell me about {:?}&quot;, triple);</span></span>\n<span class="line"><span>    // match 可以解构一个元组</span></span>\n<span class="line"><span>    match triple {</span></span>\n<span class="line"><span>        // 解构出第二个和第三个元素</span></span>\n<span class="line"><span>        (0, y, z) =&gt; println!(&quot;First is `0`, `y` is {:?}, and `z` is {:?}&quot;, y, z),</span></span>\n<span class="line"><span>        (1, ..)  =&gt; println!(&quot;First is `1` and the rest doesn&#39;t matter&quot;),</span></span>\n<span class="line"><span>        // `..` 可用来忽略元组的其余部分</span></span>\n<span class="line"><span>        _      =&gt; println!(&quot;It doesn&#39;t matter what they are&quot;),</span></span>\n<span class="line"><span>        // `_` 表示不将值绑定到变量</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>',4)),i("p",null,[l(n,{to:"/primitives/tuples.html"},{default:p(()=>s[0]||(s[0]=[d("元组")])),_:1})])])}const v=e(u,[["render",o],["__file","destructure_tuple.html.vue"]]),b=JSON.parse('{"path":"/flow_control/match/destructuring/destructure_tuple.html","title":"元组","lang":"zh-CN","frontmatter":{"description":"元组 元组可以在 match 中解构，如下所示： 参见：","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn/flow_control/match/destructuring/destructure_tuple.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn"}],["meta",{"property":"og:title","content":"元组"}],["meta",{"property":"og:description","content":"元组 元组可以在 match 中解构，如下所示： 参见："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"元组\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"flow_control/match/destructuring/destructure_tuple.md","excerpt":"\\n<p>元组可以在 <code>match</code> 中解构，如下所示：</p>\\n<div class=\\"language-rust,editable line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,editable\\" data-title=\\"rust,editable\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>fn main() {</span></span>\\n<span class=\\"line\\"><span>    let triple = (0, -2, 3);</span></span>\\n<span class=\\"line\\"><span>    // 试一试 ^ 将不同的值赋给 `triple`</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    println!(\\"Tell me about {:?}\\", triple);</span></span>\\n<span class=\\"line\\"><span>    // match 可以解构一个元组</span></span>\\n<span class=\\"line\\"><span>    match triple {</span></span>\\n<span class=\\"line\\"><span>        // 解构出第二个和第三个元素</span></span>\\n<span class=\\"line\\"><span>        (0, y, z) =&gt; println!(\\"First is `0`, `y` is {:?}, and `z` is {:?}\\", y, z),</span></span>\\n<span class=\\"line\\"><span>        (1, ..)  =&gt; println!(\\"First is `1` and the rest doesn\'t matter\\"),</span></span>\\n<span class=\\"line\\"><span>        // `..` 可用来忽略元组的其余部分</span></span>\\n<span class=\\"line\\"><span>        _      =&gt; println!(\\"It doesn\'t matter what they are\\"),</span></span>\\n<span class=\\"line\\"><span>        // `_` 表示不将值绑定到变量</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[{"title":"tuples","link":"primitives/tuples.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"flow_control/match/destructuring/destructure_tuple.md","value":{"title":"destructure_tuple","path":"flow_control/match/destructuring/destructure_tuple.md","outlink":["primitives/tuples.md"],"backlink":["SUMMARY.md"]}},{"id":"primitives/tuples.md","value":{"title":"tuples","path":"primitives/tuples.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"flow_control/match/destructuring/destructure_tuple.md","target":"primitives/tuples.md"},{"source":"SUMMARY.md","target":"flow_control/match/destructuring/destructure_tuple.md"}]}}}');export{v as comp,b as data};
