import{_ as t,e as i,k as o,o as a}from"./app-CY03Lsxp.js";const r={};function s(c,e){return a(),i("div",null,e[0]||(e[0]=[o('<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p><code>File</code> 结构体表示一个被打开的文件（它装包了一个文件描述符），并赋予了针对底层文件的读和/或写能力。（原文：The <code>File</code> struct represents a file that has been opened (it wraps a file descriptor), and gives read and/or write access to the underlying file.）</p><p>由于在进行文件 I/O（输入/输出）操作时很多情形都可能出现错误，因此所有的 <code>File</code> 方法都返回 <code>io::Result&lt;T&gt;</code> 类型，这是 <code>Result&lt;T, io::Error&gt;</code> 的别名。</p><p>这使得所有 I/O 操作的失败都变成<strong>显式</strong>内容。借助这点，程序员可以看到所有的失败路径，并鼓励主动去处理这些情形。</p>',4)]))}const l=t(r,[["render",s],["__file","life.html.vue"]]),d=JSON.parse('{"path":"/std_misc/life.html","title":"life","lang":"zh-CN","frontmatter":{"description":"File 结构体表示一个被打开的文件（它装包了一个文件描述符），并赋予了针对底层文件的读和/或写能力。（原文：The File struct represents a file that has been opened (it wraps a file descriptor), and gives read and/or write access to...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn/std_misc/life.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn"}],["meta",{"property":"og:description","content":"File 结构体表示一个被打开的文件（它装包了一个文件描述符），并赋予了针对底层文件的读和/或写能力。（原文：The File struct represents a file that has been opened (it wraps a file descriptor), and gives read and/or write access to..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.57,"words":170},"filePathRelative":"std_misc/life.md","excerpt":"\\n<p><code>File</code> 结构体表示一个被打开的文件（它装包了一个文件描述符），并赋予了针对底层文件的读和/或写能力。（原文：The <code>File</code> struct represents a file that has been opened (it wraps a file descriptor), and gives read and/or write access to the underlying file.）</p>\\n<p>由于在进行文件 I/O（输入/输出）操作时很多情形都可能出现错误，因此所有的 <code>File</code> 方法都返回 <code>io::Result&lt;T&gt;</code> 类型，这是 <code>Result&lt;T, io::Error&gt;</code> 的别名。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"std_misc/life.md","value":{"title":"life","path":"std_misc/life.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{l as comp,d as data};
