import{_ as n,e as p,f as l,i as e,g as a,h as i,r,o}from"./app-CVSWwIkE.js";const m={};function y(d,t){const s=r("RouteLink");return o(),p("div",null,[t[12]||(t[12]=l("h1",{id:"类型系统",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#类型系统"},[l("span",null,"类型系统")])],-1)),t[13]||(t[13]=l("p",null,"Rust 提供了多种机制，用于改变或定义原生类型和用户定义类型。接下来会讲到：",-1)),l("ul",null,[l("li",null,[t[1]||(t[1]=e("原生类型的")),a(s,{to:"/types/cast.html"},{default:i(()=>t[0]||(t[0]=[e("类型转换")])),_:1}),t[2]||(t[2]=e("（cast）。"))]),l("li",null,[t[4]||(t[4]=e("指定")),a(s,{to:"/types/literals.html"},{default:i(()=>t[3]||(t[3]=[e("字面量")])),_:1}),t[5]||(t[5]=e("的类型。"))]),l("li",null,[t[7]||(t[7]=e("使用")),a(s,{to:"/types/inference.html"},{default:i(()=>t[6]||(t[6]=[e("类型推断")])),_:1}),t[8]||(t[8]=e("（type inference）。"))]),l("li",null,[t[10]||(t[10]=e("给类型")),a(s,{to:"/types/alias.html"},{default:i(()=>t[9]||(t[9]=[e("取别名")])),_:1}),t[11]||(t[11]=e("（alias）。"))])])])}const c=n(m,[["render",y],["__file","types.html.vue"]]),k=JSON.parse('{"path":"/types.html","title":"类型系统","lang":"zh-CN","frontmatter":{"description":"类型系统 Rust 提供了多种机制，用于改变或定义原生类型和用户定义类型。接下来会讲到： 原生类型的（cast）。 指定的类型。 使用（type inference）。 给类型（alias）。","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/types.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"类型系统"}],["meta",{"property":"og:description","content":"类型系统 Rust 提供了多种机制，用于改变或定义原生类型和用户定义类型。接下来会讲到： 原生类型的（cast）。 指定的类型。 使用（type inference）。 给类型（alias）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.28,"words":83},"filePathRelative":"types.md","excerpt":"\\n<p>Rust 提供了多种机制，用于改变或定义原生类型和用户定义类型。接下来会讲到：</p>\\n<ul>\\n<li>原生类型的<a href=\\"/rust-by-example-cn-/types/cast.html\\" target=\\"_blank\\">类型转换</a>（cast）。</li>\\n<li>指定<a href=\\"/rust-by-example-cn-/types/literals.html\\" target=\\"_blank\\">字面量</a>的类型。</li>\\n<li>使用<a href=\\"/rust-by-example-cn-/types/inference.html\\" target=\\"_blank\\">类型推断</a>（type inference）。</li>\\n<li>给类型<a href=\\"/rust-by-example-cn-/types/alias.html\\" target=\\"_blank\\">取别名</a>（alias）。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"cast","link":"types/cast.html"},{"title":"literals","link":"types/literals.html"},{"title":"inference","link":"types/inference.html"},{"title":"alias","link":"types/alias.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"types.md","value":{"title":"types","path":"types.md","outlink":["types/cast.md","types/literals.md","types/inference.md","types/alias.md"],"backlink":["SUMMARY.md"]}},{"id":"types/cast.md","value":{"title":"cast","path":"types/cast.md","outlink":[],"backlink":[]}},{"id":"types/literals.md","value":{"title":"literals","path":"types/literals.md","outlink":[],"backlink":[]}},{"id":"types/inference.md","value":{"title":"inference","path":"types/inference.md","outlink":[],"backlink":[]}},{"id":"types/alias.md","value":{"title":"alias","path":"types/alias.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"types.md","target":"types/cast.md"},{"source":"types.md","target":"types/literals.md"},{"source":"types.md","target":"types/inference.md"},{"source":"types.md","target":"types/alias.md"},{"source":"SUMMARY.md","target":"types.md"}]}}}');export{c as comp,k as data};
