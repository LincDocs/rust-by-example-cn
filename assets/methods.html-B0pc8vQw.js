import{_ as e,e as a,k as i,f as l,g as t,h as p,r as d,o as r,i as c}from"./app-CVSWwIkE.js";const o={};function m(u,n){const s=d("RouteLink");return r(),a("div",null,[n[1]||(n[1]=i(`<h1 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h1><p>方法的标注和函数类似：</p><div class="language-rust,editable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable" data-title="rust,editable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>struct Owner(i32);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>impl Owner {</span></span>
<span class="line"><span>    // 标注生命周期，就像独立的函数一样。</span></span>
<span class="line"><span>    fn add_one&lt;&#39;a&gt;(&amp;&#39;a mut self) { self.0 += 1; }</span></span>
<span class="line"><span>    fn print&lt;&#39;a&gt;(&amp;&#39;a self) {</span></span>
<span class="line"><span>        println!(&quot;\`print\`: {}&quot;, self.0);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    let mut owner  = Owner(18);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    owner.add_one();</span></span>
<span class="line"><span>    owner.print();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>译注：方法一般是不需要标明生命周期的，因为 <code>self</code> 的生命周期会赋给所有的输出生命周期参数，详见 <a href="https://rustwiki.org/zh-CN/book/ch10-03-lifetime-syntax.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9C%81%E7%95%A5lifetime-elision" target="_blank" rel="noopener noreferrer">TRPL</a>。</p></blockquote><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>`,5)),l("p",null,[t(s,{to:"/fn/methods.html"},{default:p(()=>n[0]||(n[0]=[c("方法")])),_:1})])])}const v=e(o,[["render",m],["__file","methods.html.vue"]]),b=JSON.parse(`{"path":"/scope/lifetime/methods.html","title":"方法","lang":"zh-CN","frontmatter":{"description":"方法 方法的标注和函数类似： 译注：方法一般是不需要标明生命周期的，因为 self 的生命周期会赋给所有的输出生命周期参数，详见 TRPL。 参见：","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/scope/lifetime/methods.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"方法"}],["meta",{"property":"og:description","content":"方法 方法的标注和函数类似： 译注：方法一般是不需要标明生命周期的，因为 self 的生命周期会赋给所有的输出生命周期参数，详见 TRPL。 参见："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"scope/lifetime/methods.md","excerpt":"\\n<p>方法的标注和函数类似：</p>\\n<div class=\\"language-rust,editable line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,editable\\" data-title=\\"rust,editable\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>struct Owner(i32);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>impl Owner {</span></span>\\n<span class=\\"line\\"><span>    // 标注生命周期，就像独立的函数一样。</span></span>\\n<span class=\\"line\\"><span>    fn add_one&lt;'a&gt;(&amp;'a mut self) { self.0 += 1; }</span></span>\\n<span class=\\"line\\"><span>    fn print&lt;'a&gt;(&amp;'a self) {</span></span>\\n<span class=\\"line\\"><span>        println!(\\"\`print\`: {}\\", self.0);</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>fn main() {</span></span>\\n<span class=\\"line\\"><span>    let mut owner  = Owner(18);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    owner.add_one();</span></span>\\n<span class=\\"line\\"><span>    owner.print();</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[{"title":"methods","link":"fn/methods.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"scope/lifetime/methods.md","value":{"title":"methods","path":"scope/lifetime/methods.md","outlink":["fn/methods.md"],"backlink":["SUMMARY.md"]}},{"id":"fn/methods.md","value":{"title":"methods","path":"fn/methods.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"scope/lifetime/methods.md","target":"fn/methods.md"},{"source":"SUMMARY.md","target":"scope/lifetime/methods.md"}]}}}`);export{v as comp,b as data};
