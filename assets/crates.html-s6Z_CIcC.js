import{_ as t,e as r,k as c,o as a}from"./app-CVSWwIkE.js";const o={};function s(l,e){return a(),r("div",null,e[0]||(e[0]=[c('<h1 id="crate" tabindex="-1"><a class="header-anchor" href="#crate"><span>crate</span></a></h1><p>crate（中文有 “包，包装箱” 之意）是 Rust 的编译单元。当调用 <code>rustc some_file.rs</code><br> 时，<code>some_file.rs</code> 被当作 <strong>crate 文件</strong>。如果 <code>some_file.rs</code> 里面含有 <code>mod</code><br> 声明，那么模块文件的内容将在编译之前被插入 crate 文件的相应声明处。换句话说，模块<strong>不会</strong>单独被编译，只有 crate 才会被编译。</p><p>crate 可以编译成二进制可执行文件（binary）或库文件（library）。默认情况下，<code>rustc</code> 将从 crate 产生二进制可执行文件。这种行为可以通过 <code>rustc</code> 的选项 <code>--crate-type</code><br> 重载。</p>',3)]))}const n=t(o,[["render",s],["__file","crates.html.vue"]]),d=JSON.parse('{"path":"/crates.html","title":"crate","lang":"zh-CN","frontmatter":{"description":"crate crate（中文有 “包，包装箱” 之意）是 Rust 的编译单元。当调用 rustc some_file.rs 时，some_file.rs 被当作 crate 文件。如果 some_file.rs 里面含有 mod 声明，那么模块文件的内容将在编译之前被插入 crate 文件的相应声明处。换句话说，模块不会单独被编译，只有 crate ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/crates.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"crate"}],["meta",{"property":"og:description","content":"crate crate（中文有 “包，包装箱” 之意）是 Rust 的编译单元。当调用 rustc some_file.rs 时，some_file.rs 被当作 crate 文件。如果 some_file.rs 里面含有 mod 声明，那么模块文件的内容将在编译之前被插入 crate 文件的相应声明处。换句话说，模块不会单独被编译，只有 crate ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"crate\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.48,"words":144},"filePathRelative":"crates.md","excerpt":"\\n<p>crate（中文有 “包，包装箱” 之意）是 Rust 的编译单元。当调用 <code>rustc some_file.rs</code><br>\\n时，<code>some_file.rs</code> 被当作 <strong>crate 文件</strong>。如果 <code>some_file.rs</code> 里面含有 <code>mod</code><br>\\n声明，那么模块文件的内容将在编译之前被插入 crate 文件的相应声明处。换句话说，模块<strong>不会</strong>单独被编译，只有 crate 才会被编译。</p>\\n<p>crate 可以编译成二进制可执行文件（binary）或库文件（library）。默认情况下，<code>rustc</code> 将从 crate 产生二进制可执行文件。这种行为可以通过 <code>rustc</code> 的选项 <code>--crate-type</code><br>\\n重载。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"},{"title":"literals","link":"types/literals.html"}],"localMap":{"nodes":[{"id":"crates.md","value":{"title":"crates","path":"crates.md","outlink":[],"backlink":["SUMMARY.md","types/literals.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}},{"id":"types/literals.md","value":{"title":"literals","path":"types/literals.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"crates.md"},{"source":"types/literals.md","target":"crates.md"}]}}}');export{n as comp,d as data};
