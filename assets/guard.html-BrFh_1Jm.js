import{_ as a,e,k as i,f as t,g as l,h as p,r,o as d,i as c}from"./app-CVSWwIkE.js";const o={};function m(u,n){const s=r("RouteLink");return d(),e("div",null,[n[1]||(n[1]=i(`<h1 id="卫语句" tabindex="-1"><a class="header-anchor" href="#卫语句"><span>卫语句</span></a></h1><p>可以加上 <code>match</code> <strong>卫语句</strong>（guard） 来过滤分支。</p><div class="language-rust,editable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable" data-title="rust,editable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fn main() {</span></span>
<span class="line"><span>    let pair = (2, -2);</span></span>
<span class="line"><span>    // 试一试 ^ 将不同的值赋给 \`pair\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    println!(&quot;Tell me about {:?}&quot;, pair);</span></span>
<span class="line"><span>    match pair {</span></span>
<span class="line"><span>        (x, y) if x == y =&gt; println!(&quot;These are twins&quot;),</span></span>
<span class="line"><span>        // ^ \`if\` 条件部分是一个卫语句</span></span>
<span class="line"><span>        (x, y) if x + y == 0 =&gt; println!(&quot;Antimatter, kaboom!&quot;),</span></span>
<span class="line"><span>        (x, _) if x % 2 == 1 =&gt; println!(&quot;The first one is odd&quot;),</span></span>
<span class="line"><span>        _ =&gt; println!(&quot;No correlation...&quot;),</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见：</span></a></h3>`,4)),t("p",null,[l(s,{to:"/primitives/tuples.html"},{default:p(()=>n[0]||(n[0]=[c("元组")])),_:1})])])}const v=a(o,[["render",m],["__file","guard.html.vue"]]),b=JSON.parse('{"path":"/flow_control/match/guard.html","title":"卫语句","lang":"zh-CN","frontmatter":{"description":"卫语句 可以加上 match 卫语句（guard） 来过滤分支。 参见：","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/flow_control/match/guard.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"卫语句"}],["meta",{"property":"og:description","content":"卫语句 可以加上 match 卫语句（guard） 来过滤分支。 参见："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"卫语句\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.32,"words":95},"filePathRelative":"flow_control/match/guard.md","excerpt":"\\n<p>可以加上 <code>match</code> <strong>卫语句</strong>（guard） 来过滤分支。</p>\\n<div class=\\"language-rust,editable line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,editable\\" data-title=\\"rust,editable\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>fn main() {</span></span>\\n<span class=\\"line\\"><span>    let pair = (2, -2);</span></span>\\n<span class=\\"line\\"><span>    // 试一试 ^ 将不同的值赋给 `pair`</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    println!(\\"Tell me about {:?}\\", pair);</span></span>\\n<span class=\\"line\\"><span>    match pair {</span></span>\\n<span class=\\"line\\"><span>        (x, y) if x == y =&gt; println!(\\"These are twins\\"),</span></span>\\n<span class=\\"line\\"><span>        // ^ `if` 条件部分是一个卫语句</span></span>\\n<span class=\\"line\\"><span>        (x, y) if x + y == 0 =&gt; println!(\\"Antimatter, kaboom!\\"),</span></span>\\n<span class=\\"line\\"><span>        (x, _) if x % 2 == 1 =&gt; println!(\\"The first one is odd\\"),</span></span>\\n<span class=\\"line\\"><span>        _ =&gt; println!(\\"No correlation...\\"),</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[{"title":"tuples","link":"primitives/tuples.html"}],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"flow_control/match/guard.md","value":{"title":"guard","path":"flow_control/match/guard.md","outlink":["primitives/tuples.md"],"backlink":["SUMMARY.md"]}},{"id":"primitives/tuples.md","value":{"title":"tuples","path":"primitives/tuples.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"flow_control/match/guard.md","target":"primitives/tuples.md"},{"source":"SUMMARY.md","target":"flow_control/match/guard.md"}]}}}');export{v as comp,b as data};
