import{_ as s,e as n,k as e,o as i}from"./app-CVSWwIkE.js";const t={};function l(c,a){return i(),n("div",null,a[0]||(a[0]=[e(`<h1 id="crate" tabindex="-1"><a class="header-anchor" href="#crate"><span><code>crate</code></span></a></h1><p><code>crate_type</code> 属性可以告知编译器 crate 是一个二进制的可执行文件还是一个库（甚至是哪种类型的库），<code>crate_name</code> 属性可以设定 crate 的名称。</p><p>不过，一定要注意在使用 cargo 时，这两种类型时都<strong>没有</strong>作用。由于大多数 Rust<br> 工程都使用 cargo，这意味着 <code>crate_type</code> 和 <code>crate_name</code> 的作用事实上很有限。</p><div class="language-rust,editable line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable" data-title="rust,editable" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 这个 crate 是一个库文件</span></span>
<span class="line"><span>#![crate_type = &quot;lib&quot;]</span></span>
<span class="line"><span>// 库的名称为 “rary”</span></span>
<span class="line"><span>#![crate_name = &quot;rary&quot;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pub fn public_function() {</span></span>
<span class="line"><span>    println!(&quot;called rary&#39;s \`public_function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn private_function() {</span></span>
<span class="line"><span>    println!(&quot;called rary&#39;s \`private_function()\`&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pub fn indirect_access() {</span></span>
<span class="line"><span>    print!(&quot;called rary&#39;s \`indirect_access()\`, that\\n&gt; &quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private_function();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当用到 <code>crate_type</code> 属性时，就不再需要给 <code>rustc</code> 命令加上 <code>--crate-type</code> 标记。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lib.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lib</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">library.rlib</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const p=s(t,[["render",l],["__file","crate.html.vue"]]),d=JSON.parse('{"path":"/attribute/crate.html","title":"crate","lang":"zh-CN","frontmatter":{"description":"crate crate_type 属性可以告知编译器 crate 是一个二进制的可执行文件还是一个库（甚至是哪种类型的库），crate_name 属性可以设定 crate 的名称。 不过，一定要注意在使用 cargo 时，这两种类型时都没有作用。由于大多数 Rust 工程都使用 cargo，这意味着 crate_type 和 crate_name 的作...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/attribute/crate.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"crate"}],["meta",{"property":"og:description","content":"crate crate_type 属性可以告知编译器 crate 是一个二进制的可执行文件还是一个库（甚至是哪种类型的库），crate_name 属性可以设定 crate 的名称。 不过，一定要注意在使用 cargo 时，这两种类型时都没有作用。由于大多数 Rust 工程都使用 cargo，这意味着 crate_type 和 crate_name 的作..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"crate\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"attribute/crate.md","excerpt":"\\n<p><code>crate_type</code> 属性可以告知编译器 crate 是一个二进制的可执行文件还是一个库（甚至是哪种类型的库），<code>crate_name</code> 属性可以设定 crate 的名称。</p>\\n<p>不过，一定要注意在使用 cargo 时，这两种类型时都<strong>没有</strong>作用。由于大多数 Rust<br>\\n工程都使用 cargo，这意味着 <code>crate_type</code> 和 <code>crate_name</code> 的作用事实上很有限。</p>\\n<div class=\\"language-rust,editable line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust,editable\\" data-title=\\"rust,editable\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>// 这个 crate 是一个库文件</span></span>\\n<span class=\\"line\\"><span>#![crate_type = \\"lib\\"]</span></span>\\n<span class=\\"line\\"><span>// 库的名称为 “rary”</span></span>\\n<span class=\\"line\\"><span>#![crate_name = \\"rary\\"]</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>pub fn public_function() {</span></span>\\n<span class=\\"line\\"><span>    println!(\\"called rary\'s `public_function()`\\");</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>fn private_function() {</span></span>\\n<span class=\\"line\\"><span>    println!(\\"called rary\'s `private_function()`\\");</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>pub fn indirect_access() {</span></span>\\n<span class=\\"line\\"><span>    print!(\\"called rary\'s `indirect_access()`, that\\\\n&gt; \\");</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    private_function();</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"},{"title":"lib","link":"crates/lib.html"}],"localMap":{"nodes":[{"id":"attribute/crate.md","value":{"title":"crate","path":"attribute/crate.md","outlink":[],"backlink":["SUMMARY.md","crates/lib.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}},{"id":"crates/lib.md","value":{"title":"lib","path":"crates/lib.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"attribute/crate.md"},{"source":"crates/lib.md","target":"attribute/crate.md"}]}}}');export{p as comp,d as data};
