import{_ as n,e as a,k as e,o as i}from"./app-CVSWwIkE.js";const l={};function d(p,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h1><p>用 <code>cargo doc</code> 构建文档到 <code>target/doc</code>。</p><p>用 <code>cargo test</code> 运行所有测试（包括文档测试），用 <code>cargo test --doc</code> 仅运行文档测试。</p><p>这些命令会恰当地按需调用 <code>rustdoc</code>（以及 <code>rustc</code>）。</p><h2 id="文档注释" tabindex="-1"><a class="header-anchor" href="#文档注释"><span>文档注释</span></a></h2><p>文档注释对于需要文档的大型项目来说非常重要。当运行 <code>rustdoc</code>，文档注释就会编译成文档。它们使用 <code>///</code> 标记，并支持 <a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener noreferrer">Markdown</a>。</p><div class="language-rust,editable,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable,ignore" data-title="rust,editable,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#![crate_name = &quot;doc&quot;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/// 这里给出一个“人”的表示</span></span>
<span class="line"><span>pub struct Person {</span></span>
<span class="line"><span>    /// 一个人必须有名字（不管 Juliet 多讨厌她自己的名字）。</span></span>
<span class="line"><span>    name: String,</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>impl Person {</span></span>
<span class="line"><span>    /// 返回具有指定名字的一个人</span></span>
<span class="line"><span>    ///</span></span>
<span class="line"><span>    /// # 参数</span></span>
<span class="line"><span>    ///</span></span>
<span class="line"><span>    /// * \`name\` - 字符串切片，代表人的名字</span></span>
<span class="line"><span>    ///</span></span>
<span class="line"><span>    /// # 示例</span></span>
<span class="line"><span>    ///</span></span>
<span class="line"><span>    /// \`\`\`</span></span>
<span class="line"><span>    /// // 在文档注释中，你可以书写代码块</span></span>
<span class="line"><span>    /// // 如果向 \`rustdoc\` 传递 --test 参数，它还会帮你测试注释文档中的代码！</span></span>
<span class="line"><span>    /// use doc::Person;</span></span>
<span class="line"><span>    /// let person = Person::new(&quot;name&quot;);</span></span>
<span class="line"><span>    /// \`\`\`</span></span>
<span class="line"><span>    pub fn new(name: &amp;str) -&gt; Person {</span></span>
<span class="line"><span>        Person {</span></span>
<span class="line"><span>            name: name.to_string(),</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /// 给一个友好的问候！</span></span>
<span class="line"><span>    /// 对被叫到的 \`Person\` 说 &quot;Hello, [name]&quot; 。</span></span>
<span class="line"><span>    pub fn hello(&amp; self) {</span></span>
<span class="line"><span>        println!(&quot;Hello, {}!&quot;, self.name);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    let john = Person::new(&quot;John&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    john.hello();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要运行测试，首先将代码构建为库，然后告诉 <code>rustdoc</code> 在哪里找到库，这样它就可以使每个文档中的程序链接到库：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc.rs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --crate-type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lib</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdoc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc=&quot;libdoc.rlib&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc.rs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档属性" tabindex="-1"><a class="header-anchor" href="#文档属性"><span>文档属性</span></a></h2><p>下面是一些使用 <code>rustdoc</code> 时最常使用的 <code>#[doc]</code> 属性的例子。</p><h3 id="inline" tabindex="-1"><a class="header-anchor" href="#inline"><span><code>inline</code></span></a></h3><p>用于内联文档，而不是链接到单独的页面。</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#[doc(inline)]</span></span>
<span class="line"><span>pub use bar::Bar;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/// bar 的文档</span></span>
<span class="line"><span>mod bar {</span></span>
<span class="line"><span>    /// Bar 的文档</span></span>
<span class="line"><span>    pub struct Bar;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="no-inline" tabindex="-1"><a class="header-anchor" href="#no-inline"><span><code>no_inline</code></span></a></h3><p>用于防止链接到单独的页面或其他位置。</p><div class="language-rust,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,ignore" data-title="rust,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 来自 libcore/prelude 的例子</span></span>
<span class="line"><span>#[doc(no_inline)]</span></span>
<span class="line"><span>pub use crate::mem::drop;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidden" tabindex="-1"><a class="header-anchor" href="#hidden"><span><code>hidden</code></span></a></h3><p>使用此属性来告诉 <code>rustdoc</code> 不要包含此项到文档中：</p><div class="language-rust,editable,ignore line-numbers-mode" data-highlighter="shiki" data-ext="rust,editable,ignore" data-title="rust,editable,ignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 来自 futures-rs 库的例子</span></span>
<span class="line"><span>#[doc(hidden)]</span></span>
<span class="line"><span>pub use self::async_await::*;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对文档来说，<code>rustdoc</code> 被社区广泛采用。<a href="https://doc.rust-lang.org/std/" target="_blank" rel="noopener noreferrer">标准库文档</a>也是用它生成的。</p><h3 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见:</span></a></h3><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li>[Is there any documentation style guide for comments? (reddit)][reddit]</li></ul></div></div></div></li></ul></div></div></div></li></ul></div></div></div></li></ul></div></div></div></li></ul></div></div></div></li></ul>`,23)]))}const t=n(l,[["render",d],["__file","doc.html.vue"]]),c=JSON.parse('{"path":"/meta/doc.html","title":"文档","lang":"zh-CN","frontmatter":{"description":"文档 用 cargo doc 构建文档到 target/doc。 用 cargo test 运行所有测试（包括文档测试），用 cargo test --doc 仅运行文档测试。 这些命令会恰当地按需调用 rustdoc（以及 rustc）。 文档注释 文档注释对于需要文档的大型项目来说非常重要。当运行 rustdoc，文档注释就会编译成文档。它们使用 ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-by-example-cn-/meta/doc.html"}],["meta",{"property":"og:site_name","content":"rust-by-example-cn-"}],["meta",{"property":"og:title","content":"文档"}],["meta",{"property":"og:description","content":"文档 用 cargo doc 构建文档到 target/doc。 用 cargo test 运行所有测试（包括文档测试），用 cargo test --doc 仅运行文档测试。 这些命令会恰当地按需调用 rustdoc（以及 rustc）。 文档注释 文档注释对于需要文档的大型项目来说非常重要。当运行 rustdoc，文档注释就会编译成文档。它们使用 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文档\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-by-example-cn-/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.03,"words":608},"filePathRelative":"meta/doc.md","excerpt":"\\n<p>用 <code>cargo doc</code> 构建文档到 <code>target/doc</code>。</p>\\n<p>用 <code>cargo test</code> 运行所有测试（包括文档测试），用 <code>cargo test --doc</code> 仅运行文档测试。</p>\\n<p>这些命令会恰当地按需调用 <code>rustdoc</code>（以及 <code>rustc</code>）。</p>\\n<h2>文档注释</h2>\\n<p>文档注释对于需要文档的大型项目来说非常重要。当运行 <code>rustdoc</code>，文档注释就会编译成文档。它们使用 <code>///</code> 标记，并支持 <a href=\\"https://en.wikipedia.org/wiki/Markdown\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Markdown</a>。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"},{"title":"comment","link":"hello/comment.html"}],"localMap":{"nodes":[{"id":"meta/doc.md","value":{"title":"doc","path":"meta/doc.md","outlink":[],"backlink":["SUMMARY.md","hello/comment.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}},{"id":"hello/comment.md","value":{"title":"comment","path":"hello/comment.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"meta/doc.md"},{"source":"hello/comment.md","target":"meta/doc.md"}]}}}');export{t as comp,c as data};
